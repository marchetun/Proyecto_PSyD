   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"proyecto.c"
  21              	.Ltext0:
  22              		.file 1 "../proyecto.c"
 2155              		.align	2
 2156              		.global	main
 2158              	main:
 2159              	.LFB0:
   1:../proyecto.c **** #include <s3c44b0x.h>
   2:../proyecto.c **** #include <s3cev40.h>
   3:../proyecto.c **** #include <common_types.h>
   4:../proyecto.c **** #include <system.h>
   5:../proyecto.c **** #include <leds.h>
   6:../proyecto.c **** #include <segs.h>
   7:../proyecto.c **** #include <uart.h>
   8:../proyecto.c **** #include <rtc.h>
   9:../proyecto.c **** #include <timers.h>
  10:../proyecto.c **** #include <keypad.h>
  11:../proyecto.c **** #include <lcd.h>
  12:../proyecto.c **** #include <ts.h>
  13:../proyecto.c **** #include <rtc.h>
  14:../proyecto.c **** #include "Extra_Fuctions.h"
  15:../proyecto.c **** #include "kernelcoop.h"
  16:../proyecto.c **** 
  17:../proyecto.c **** /////////////////////////////////////////////////////////////////////////////
  18:../proyecto.c **** // CONFIGURACION
  19:../proyecto.c **** /////////////////////////////////////////////////////////////////////////////
  20:../proyecto.c **** 
  21:../proyecto.c **** #define MAXPLACES              (8)
  22:../proyecto.c **** 
  23:../proyecto.c **** /////////////////////////////////////////////////////////////////////////////
  24:../proyecto.c **** // Declaracion de tipos
  25:../proyecto.c **** /////////////////////////////////////////////////////////////////////////////
  26:../proyecto.c **** 
  27:../proyecto.c **** typedef struct
  28:../proyecto.c **** {
  29:../proyecto.c **** 	rtc_time_t startTime;   // Hora en la que se ocupó la plaza
  30:../proyecto.c **** 	rtc_time_t endTime;     // Hora en la que expiró la plaza
  31:../proyecto.c ****     boolean occupied;   // Indica si la plaza está ocupada
  32:../proyecto.c **** } plaza_t;
  33:../proyecto.c **** 
  34:../proyecto.c **** typedef plaza_t parking_t[MAXPLACES];
  35:../proyecto.c **** 
  36:../proyecto.c **** // Declaro esta estructura para añadir estados restantes a la main_task()
  37:../proyecto.c **** typedef enum
  38:../proyecto.c **** {
  39:../proyecto.c ****     WELCOME_SCREEN,     // Estado inicial, muestra pantalla de bienvenida (nuevo demo_waiting)
  40:../proyecto.c ****     SELECT_PLACE,       // Estado de selección de plaza
  41:../proyecto.c ****     SHOW_TARIFF,        // Estado que muestra la tarifa
  42:../proyecto.c ****     PROCESS_PAYMENT,    // Estado que procesa el pago
  43:../proyecto.c ****     PRINT_TICKET       // Estado que imprime el ticket
  44:../proyecto.c **** } parkingState_t;
  45:../proyecto.c **** 
  46:../proyecto.c **** /////////////////////////////////////////////////////////////////////////////
  47:../proyecto.c **** // Declaracion de funciones
  48:../proyecto.c **** /////////////////////////////////////////////////////////////////////////////
  49:../proyecto.c **** 
  50:../proyecto.c **** void setup(void);
  51:../proyecto.c **** 
  52:../proyecto.c **** uint8 checkSelectedPlace(uint16 x, uint16 y); //Devuelve el índice de la plaza seleccionada según c
  53:../proyecto.c **** 
  54:../proyecto.c **** void drawParkingGrid(void);
  55:../proyecto.c **** void plotWelcomeScreen(void);
  56:../proyecto.c **** void showPlaceOccupiedMessage(uint8 placeNum);   	  // Muestra la pantalla con el mensaje de plaza 
  57:../proyecto.c **** void showTariffScreen(uint8 placeNum, uint16 credit);    // Muestra la pantalla con el mensaje de t
  58:../proyecto.c **** 
  59:../proyecto.c **** /////////////////////////////////////////////////////////////////////////////
  60:../proyecto.c **** // Declaracion de tareas
  61:../proyecto.c **** /////////////////////////////////////////////////////////////////////////////
  62:../proyecto.c **** 
  63:../proyecto.c **** void tsScanTask(void);
  64:../proyecto.c **** void coinsAcceptorTask(void);
  65:../proyecto.c **** void clockTask(void);
  66:../proyecto.c **** void coinsMoverTask(void);
  67:../proyecto.c **** void mainTask(void);
  68:../proyecto.c **** void ticketPrinterTask(void);
  69:../proyecto.c **** 
  70:../proyecto.c **** /////////////////////////////////////////////////////////////////////////////
  71:../proyecto.c **** // Declaracion de recursos
  72:../proyecto.c **** /////////////////////////////////////////////////////////////////////////////
  73:../proyecto.c **** 
  74:../proyecto.c **** parking_t parking;
  75:../proyecto.c **** 
  76:../proyecto.c **** rtc_time_t actual_time;
  77:../proyecto.c **** 
  78:../proyecto.c **** volatile uint8 selectedPlace;
  79:../proyecto.c **** 
  80:../proyecto.c **** struct mbox1 {                /* mailbox donde la coinsAcceptorTask indica a mainTask la moneda int
  81:../proyecto.c ****     boolean flag;
  82:../proyecto.c ****     uint8   cents;
  83:../proyecto.c **** } coinAcceptorMsg;
  84:../proyecto.c **** 
  85:../proyecto.c **** struct mbox2 {                /* mailbox donde la tsScanTask indica a mainTask la posicion de la pa
  86:../proyecto.c ****     boolean flag;
  87:../proyecto.c ****     uint16  x, y;
  88:../proyecto.c **** } tsPressedMsg;
  89:../proyecto.c **** 
  90:../proyecto.c **** struct mbox3 {                 /* mailbox donde la mainTask indica a coinsMoverTask si debe aceptar
  91:../proyecto.c ****     boolean flag;
  92:../proyecto.c ****     boolean accept;
  93:../proyecto.c **** } coinsMoverMsg;
  94:../proyecto.c **** 
  95:../proyecto.c **** boolean printTicketFlag;    /* mailbox donde la mainTask indica a ticketPrintTask que imprima un ti
  96:../proyecto.c **** 
  97:../proyecto.c **** /*******************************************************************/
  98:../proyecto.c **** 
  99:../proyecto.c **** void main(void)
 100:../proyecto.c **** {
 2160              		.loc 1 100 0
 2161              		.cfi_startproc
 2162              		@ Function supports interworking.
 2163              		@ args = 0, pretend = 0, frame = 0
 2164              		@ frame_needed = 1, uses_anonymous_args = 0
 2165 0000 0DC0A0E1 		mov	ip, sp
 2166              	.LCFI0:
 2167              		.cfi_def_cfa_register 12
 2168 0004 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2169 0008 04B04CE2 		sub	fp, ip, #4
 2170              		.cfi_offset 14, -8
 2171              		.cfi_offset 13, -12
 2172              		.cfi_offset 11, -16
 2173              	.LCFI1:
 2174              		.cfi_def_cfa 11, 4
 101:../proyecto.c ****     sys_init();
 2175              		.loc 1 101 0
 2176 000c FEFFFFEB 		bl	sys_init
 102:../proyecto.c ****     leds_init();
 2177              		.loc 1 102 0
 2178 0010 FEFFFFEB 		bl	leds_init
 103:../proyecto.c ****     segs_init();
 2179              		.loc 1 103 0
 2180 0014 FEFFFFEB 		bl	segs_init
 104:../proyecto.c ****     uart0_init();
 2181              		.loc 1 104 0
 2182 0018 FEFFFFEB 		bl	uart0_init
 105:../proyecto.c ****     rtc_init();
 2183              		.loc 1 105 0
 2184 001c FEFFFFEB 		bl	rtc_init
 106:../proyecto.c ****     timers_init();
 2185              		.loc 1 106 0
 2186 0020 FEFFFFEB 		bl	timers_init
 107:../proyecto.c ****     keypad_init();
 2187              		.loc 1 107 0
 2188 0024 FEFFFFEB 		bl	keypad_init
 108:../proyecto.c ****     lcd_init();
 2189              		.loc 1 108 0
 2190 0028 FEFFFFEB 		bl	lcd_init
 109:../proyecto.c ****     ts_init();
 2191              		.loc 1 109 0
 2192 002c FEFFFFEB 		bl	ts_init
 110:../proyecto.c **** 
 111:../proyecto.c ****     lcd_on();
 2193              		.loc 1 111 0
 2194 0030 FEFFFFEB 		bl	lcd_on
 112:../proyecto.c ****     ts_on();
 2195              		.loc 1 112 0
 2196 0034 FEFFFFEB 		bl	ts_on
 113:../proyecto.c **** 
 114:../proyecto.c ****     setup();
 2197              		.loc 1 114 0
 2198 0038 FEFFFFEB 		bl	setup
 115:../proyecto.c **** 
 116:../proyecto.c ****     scheduler_init();                       /* Inicializa el kernel */
 2199              		.loc 1 116 0
 2200 003c FEFFFFEB 		bl	scheduler_init
 117:../proyecto.c **** 
 118:../proyecto.c ****     create_task(tsScanTask, 5);    /* Crea las tareas de la aplicacion... */
 2201              		.loc 1 118 0
 2202 0040 58009FE5 		ldr	r0, .L3
 2203 0044 0510A0E3 		mov	r1, #5
 2204 0048 FEFFFFEB 		bl	create_task
 119:../proyecto.c ****     create_task(coinsAcceptorTask, 5);    /* ... el kernel asigna la prioridad segun orden de creac
 2205              		.loc 1 119 0
 2206 004c 50009FE5 		ldr	r0, .L3+4
 2207 0050 0510A0E3 		mov	r1, #5
 2208 0054 FEFFFFEB 		bl	create_task
 120:../proyecto.c ****     create_task(mainTask, 10);    /* ... las tareas mas frecuentes tienen mayor prioridad (criterio
 2209              		.loc 1 120 0
 2210 0058 48009FE5 		ldr	r0, .L3+8
 2211 005c 0A10A0E3 		mov	r1, #10
 2212 0060 FEFFFFEB 		bl	create_task
 121:../proyecto.c ****     create_task(coinsMoverTask, 10);
 2213              		.loc 1 121 0
 2214 0064 40009FE5 		ldr	r0, .L3+12
 2215 0068 0A10A0E3 		mov	r1, #10
 2216 006c FEFFFFEB 		bl	create_task
 122:../proyecto.c ****     create_task(clockTask, 10);
 2217              		.loc 1 122 0
 2218 0070 38009FE5 		ldr	r0, .L3+16
 2219 0074 0A10A0E3 		mov	r1, #10
 2220 0078 FEFFFFEB 		bl	create_task
 123:../proyecto.c ****     create_task(ticketPrinterTask, 10);
 2221              		.loc 1 123 0
 2222 007c 30009FE5 		ldr	r0, .L3+20
 2223 0080 0A10A0E3 		mov	r1, #10
 2224 0084 FEFFFFEB 		bl	create_task
 124:../proyecto.c **** 
 125:../proyecto.c ****     timer0_open_tick(scheduler, TICKS_PER_SEC);  /* Instala scheduler como RTI del timer0  */
 2225              		.loc 1 125 0
 2226 0088 28009FE5 		ldr	r0, .L3+24
 2227 008c 6410A0E3 		mov	r1, #100
 2228 0090 FEFFFFEB 		bl	timer0_open_tick
 2229              	.L2:
 126:../proyecto.c **** 
 127:../proyecto.c ****     while (1)
 128:../proyecto.c ****     {
 129:../proyecto.c ****         sleep();                /* Entra en estado IDLE, sale por interrupcion */
 2230              		.loc 1 129 0 discriminator 1
 2231 0094 FEFFFFEB 		bl	sleep
 130:../proyecto.c ****         dispacher();            /* Las tareas preparadas se ejecutan en esta hebra (background) en 
 2232              		.loc 1 130 0 discriminator 1
 2233 0098 FEFFFFEB 		bl	dispacher
 131:../proyecto.c ****     }
 2234              		.loc 1 131 0 discriminator 1
 2235 009c FCFFFFEA 		b	.L2
 2236              	.L4:
 2237              		.align	2
 2238              	.L3:
 2239 00a0 00000000 		.word	tsScanTask
 2240 00a4 00000000 		.word	coinsAcceptorTask
 2241 00a8 00000000 		.word	mainTask
 2242 00ac 00000000 		.word	coinsMoverTask
 2243 00b0 00000000 		.word	clockTask
 2244 00b4 00000000 		.word	ticketPrinterTask
 2245 00b8 00000000 		.word	scheduler
 2246              		.cfi_endproc
 2247              	.LFE0:
 2249              		.section	.rodata
 2250              		.align	2
 2251              	.LC0:
 2252 0000 53656C65 		.ascii	"Seleccione plaza\000"
 2252      6363696F 
 2252      6E652070 
 2252      6C617A61 
 2252      00
 2253 0011 000000   		.align	2
 2254              	.LC1:
 2255 0014 53616C64 		.ascii	"Saldo insuficiente\000"
 2255      6F20696E 
 2255      73756669 
 2255      6369656E 
 2255      746500
 2256 0027 00       		.align	2
 2257              	.LC2:
 2258 0028 50726F63 		.ascii	"Procesando pago...\000"
 2258      6573616E 
 2258      646F2070 
 2258      61676F2E 
 2258      2E2E00
 2259              		.text
 2260              		.align	2
 2261              		.global	mainTask
 2263              	mainTask:
 2264              	.LFB1:
 132:../proyecto.c **** }
 133:../proyecto.c **** 
 134:../proyecto.c **** /*******************************************************************/
 135:../proyecto.c **** 
 136:../proyecto.c **** /*
 137:../proyecto.c **** ** Tarea principal, se activa cada 100 ms muestreando los mensajes enviados de otras tareas y actua
 138:../proyecto.c **** */
 139:../proyecto.c **** void mainTask(void)
 140:../proyecto.c **** {
 2265              		.loc 1 140 0
 2266              		.cfi_startproc
 2267              		@ Function supports interworking.
 2268              		@ args = 0, pretend = 0, frame = 0
 2269              		@ frame_needed = 1, uses_anonymous_args = 0
 2270 00bc 0DC0A0E1 		mov	ip, sp
 2271              	.LCFI2:
 2272              		.cfi_def_cfa_register 12
 2273 00c0 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2274 00c4 04B04CE2 		sub	fp, ip, #4
 2275              		.cfi_offset 14, -8
 2276              		.cfi_offset 13, -12
 2277              		.cfi_offset 11, -16
 2278              	.LCFI3:
 2279              		.cfi_def_cfa 11, 4
 141:../proyecto.c ****     static boolean init = TRUE;
 142:../proyecto.c ****     static parkingState_t state;
 143:../proyecto.c ****     static uint8 credit;
 144:../proyecto.c ****     static uint16 ticks;
 145:../proyecto.c **** 
 146:../proyecto.c ****     if (init)
 2280              		.loc 1 146 0
 2281 00c8 24369FE5 		ldr	r3, .L32
 2282 00cc 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2283 00d0 000053E3 		cmp	r3, #0
 2284 00d4 0A00000A 		beq	.L6
 147:../proyecto.c ****     {
 148:../proyecto.c ****         init = FALSE;
 2285              		.loc 1 148 0
 2286 00d8 14369FE5 		ldr	r3, .L32
 2287 00dc 0020A0E3 		mov	r2, #0
 2288 00e0 0020C3E5 		strb	r2, [r3, #0]
 149:../proyecto.c ****         plotWelcomeScreen();
 2289              		.loc 1 149 0
 2290 00e4 FEFFFFEB 		bl	plotWelcomeScreen
 150:../proyecto.c ****         credit = 0;
 2291              		.loc 1 150 0
 2292 00e8 08369FE5 		ldr	r3, .L32+4
 2293 00ec 0020A0E3 		mov	r2, #0
 2294 00f0 0020C3E5 		strb	r2, [r3, #0]
 151:../proyecto.c ****         state = WELCOME_SCREEN;
 2295              		.loc 1 151 0
 2296 00f4 00369FE5 		ldr	r3, .L32+8
 2297 00f8 0020A0E3 		mov	r2, #0
 2298 00fc 0020C3E5 		strb	r2, [r3, #0]
 2299 0100 780100EA 		b	.L5
 2300              	.L6:
 152:../proyecto.c ****     }
 153:../proyecto.c ****     else switch (state)
 2301              		.loc 1 153 0
 2302 0104 F0359FE5 		ldr	r3, .L32+8
 2303 0108 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2304 010c 040053E3 		cmp	r3, #4
 2305 0110 03F19F97 		ldrls	pc, [pc, r3, asl #2]
 2306 0114 730100EA 		b	.L5
 2307              	.L13:
 2308 0118 2C010000 		.word	.L8
 2309 011c B4010000 		.word	.L9
 2310 0120 24030000 		.word	.L10
 2311 0124 C8040000 		.word	.L11
 2312 0128 9C060000 		.word	.L12
 2313              	.L8:
 154:../proyecto.c ****     {
 155:../proyecto.c ****     case WELCOME_SCREEN:                        /* Estado en donde rechaza monedas y espera la puls
 156:../proyecto.c ****         if (tsPressedMsg.flag)                    /* Chequea si se ha pulsado la pantalla (mensaje 
 2314              		.loc 1 156 0
 2315 012c CC359FE5 		ldr	r3, .L32+12
 2316 0130 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2317 0134 000053E3 		cmp	r3, #0
 2318 0138 0F00000A 		beq	.L14
 157:../proyecto.c ****         {
 158:../proyecto.c ****             tsPressedMsg.flag = FALSE;                 /* Marca el mensaje como leido */
 2319              		.loc 1 158 0
 2320 013c BC359FE5 		ldr	r3, .L32+12
 2321 0140 0020A0E3 		mov	r2, #0
 2322 0144 0020C3E5 		strb	r2, [r3, #0]
 159:../proyecto.c ****             lcd_clear();                               /* Borra pantalla */
 2323              		.loc 1 159 0
 2324 0148 FEFFFFEB 		bl	lcd_clear
 160:../proyecto.c **** 
 161:../proyecto.c ****             //Preparo cambio de estado a SELECT_PLACE
 162:../proyecto.c ****             lcd_puts_x2(48, 54, BLACK, "Seleccione plaza");
 2325              		.loc 1 162 0
 2326 014c 3000A0E3 		mov	r0, #48
 2327 0150 3610A0E3 		mov	r1, #54
 2328 0154 0F20A0E3 		mov	r2, #15
 2329 0158 A4359FE5 		ldr	r3, .L32+16
 2330 015c FEFFFFEB 		bl	lcd_puts_x2
 163:../proyecto.c ****             drawParkingGrid();
 2331              		.loc 1 163 0
 2332 0160 FEFFFFEB 		bl	drawParkingGrid
 164:../proyecto.c **** 
 165:../proyecto.c ****             state = SELECT_PLACE;                  /* Salta al estado demo_acceptCoins ... */
 2333              		.loc 1 165 0
 2334 0164 90359FE5 		ldr	r3, .L32+8
 2335 0168 0120A0E3 		mov	r2, #1
 2336 016c 0020C3E5 		strb	r2, [r3, #0]
 166:../proyecto.c ****             ticks = 500;                               /* ... en el que debera permanecer un maximo
 2337              		.loc 1 166 0
 2338 0170 90359FE5 		ldr	r3, .L32+20
 2339 0174 7D2FA0E3 		mov	r2, #500
 2340 0178 B020C3E1 		strh	r2, [r3, #0]	@ movhi
 2341              	.L14:
 167:../proyecto.c ****         }
 168:../proyecto.c ****         if (coinAcceptorMsg.flag)                /* Chequea si se ha introducido una moneda (mensaj
 2342              		.loc 1 168 0
 2343 017c 88359FE5 		ldr	r3, .L32+24
 2344 0180 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2345 0184 000053E3 		cmp	r3, #0
 2346 0188 4F01000A 		beq	.L28
 169:../proyecto.c ****         {
 170:../proyecto.c ****             coinAcceptorMsg.flag = FALSE;              /* Marca el mensaje como leido */
 2347              		.loc 1 170 0
 2348 018c 78359FE5 		ldr	r3, .L32+24
 2349 0190 0020A0E3 		mov	r2, #0
 2350 0194 0020C3E5 		strb	r2, [r3, #0]
 171:../proyecto.c ****             coinsMoverMsg.accept = FALSE;              /* Envia un mensaje para que la moneda se de
 2351              		.loc 1 171 0
 2352 0198 70359FE5 		ldr	r3, .L32+28
 2353 019c 0020A0E3 		mov	r2, #0
 2354 01a0 0120C3E5 		strb	r2, [r3, #1]
 172:../proyecto.c ****             coinsMoverMsg.flag = TRUE;
 2355              		.loc 1 172 0
 2356 01a4 64359FE5 		ldr	r3, .L32+28
 2357 01a8 0120A0E3 		mov	r2, #1
 2358 01ac 0020C3E5 		strb	r2, [r3, #0]
 173:../proyecto.c ****         }
 174:../proyecto.c ****         break;
 2359              		.loc 1 174 0
 2360 01b0 4C0100EA 		b	.L5
 2361              	.L9:
 175:../proyecto.c ****     case SELECT_PLACE:                   			/* Estado en donde rechaza monedas y espera la seleccio
 176:../proyecto.c ****             if (!(--ticks))                           /* Decrementa ticks y chequea si ha permaneci
 2362              		.loc 1 176 0
 2363 01b4 4C359FE5 		ldr	r3, .L32+20
 2364 01b8 B030D3E1 		ldrh	r3, [r3, #0]
 2365 01bc 013043E2 		sub	r3, r3, #1
 2366 01c0 0338A0E1 		mov	r3, r3, asl #16
 2367 01c4 2328A0E1 		mov	r2, r3, lsr #16
 2368 01c8 38359FE5 		ldr	r3, .L32+20
 2369 01cc B020C3E1 		strh	r2, [r3, #0]	@ movhi
 2370 01d0 30359FE5 		ldr	r3, .L32+20
 2371 01d4 B030D3E1 		ldrh	r3, [r3, #0]
 2372 01d8 000053E3 		cmp	r3, #0
 2373 01dc 0300001A 		bne	.L16
 177:../proyecto.c ****             {
 178:../proyecto.c ****                 plotWelcomeScreen();                       /* Visualiza pantalla inicial */
 2374              		.loc 1 178 0
 2375 01e0 FEFFFFEB 		bl	plotWelcomeScreen
 179:../proyecto.c ****                 state = WELCOME_SCREEN;                      /* Salta al estado demo_waiting */
 2376              		.loc 1 179 0
 2377 01e4 10359FE5 		ldr	r3, .L32+8
 2378 01e8 0020A0E3 		mov	r2, #0
 2379 01ec 0020C3E5 		strb	r2, [r3, #0]
 2380              	.L16:
 180:../proyecto.c ****             }
 181:../proyecto.c ****             if (tsPressedMsg.flag)                    /* Chequea si se ha pulsado la pantalla (mens
 2381              		.loc 1 181 0
 2382 01f0 08359FE5 		ldr	r3, .L32+12
 2383 01f4 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2384 01f8 000053E3 		cmp	r3, #0
 2385 01fc 3A00000A 		beq	.L17
 182:../proyecto.c ****             {
 183:../proyecto.c ****                 tsPressedMsg.flag = FALSE;                /* Marca el mensaje como leido */
 2386              		.loc 1 183 0
 2387 0200 F8349FE5 		ldr	r3, .L32+12
 2388 0204 0020A0E3 		mov	r2, #0
 2389 0208 0020C3E5 		strb	r2, [r3, #0]
 184:../proyecto.c **** 
 185:../proyecto.c ****                 //Devuelve en n de plaza pulsado segun las coordenadas
 186:../proyecto.c ****                 selectedPlace = checkSelectedPlace(tsPressedMsg.x, tsPressedMsg.y);
 2390              		.loc 1 186 0
 2391 020c EC349FE5 		ldr	r3, .L32+12
 2392 0210 B220D3E1 		ldrh	r2, [r3, #2]
 2393 0214 E4349FE5 		ldr	r3, .L32+12
 2394 0218 B430D3E1 		ldrh	r3, [r3, #4]
 2395 021c 0200A0E1 		mov	r0, r2
 2396 0220 0310A0E1 		mov	r1, r3
 2397 0224 FEFFFFEB 		bl	checkSelectedPlace
 2398 0228 0030A0E1 		mov	r3, r0
 2399 022c 0320A0E1 		mov	r2, r3
 2400 0230 DC349FE5 		ldr	r3, .L32+32
 2401 0234 0020C3E5 		strb	r2, [r3, #0]
 187:../proyecto.c ****                 if (selectedPlace != 0) {
 2402              		.loc 1 187 0
 2403 0238 D4349FE5 		ldr	r3, .L32+32
 2404 023c 0030D3E5 		ldrb	r3, [r3, #0]
 2405 0240 FF3003E2 		and	r3, r3, #255
 2406 0244 000053E3 		cmp	r3, #0
 2407 0248 2700000A 		beq	.L17
 188:../proyecto.c ****                     if (!parking[selectedPlace - 1].occupied) {
 2408              		.loc 1 188 0
 2409 024c C0349FE5 		ldr	r3, .L32+32
 2410 0250 0030D3E5 		ldrb	r3, [r3, #0]
 2411 0254 FF3003E2 		and	r3, r3, #255
 2412 0258 012043E2 		sub	r2, r3, #1
 2413 025c B4049FE5 		ldr	r0, .L32+36
 2414 0260 0810A0E3 		mov	r1, #8
 2415 0264 0230A0E1 		mov	r3, r2
 2416 0268 0332A0E1 		mov	r3, r3, asl #4
 2417 026c 033062E0 		rsb	r3, r2, r3
 2418 0270 033080E0 		add	r3, r0, r3
 2419 0274 013083E0 		add	r3, r3, r1
 2420 0278 0630D3E5 		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 2421 027c 000053E3 		cmp	r3, #0
 2422 0280 0E00001A 		bne	.L18
 189:../proyecto.c ****                         showTariffScreen(selectedPlace, credit);
 2423              		.loc 1 189 0
 2424 0284 88349FE5 		ldr	r3, .L32+32
 2425 0288 0030D3E5 		ldrb	r3, [r3, #0]
 2426 028c FF2003E2 		and	r2, r3, #255
 2427 0290 60349FE5 		ldr	r3, .L32+4
 2428 0294 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2429 0298 0200A0E1 		mov	r0, r2
 2430 029c 0310A0E1 		mov	r1, r3
 2431 02a0 FEFFFFEB 		bl	showTariffScreen
 190:../proyecto.c ****                         state = SHOW_TARIFF;
 2432              		.loc 1 190 0
 2433 02a4 50349FE5 		ldr	r3, .L32+8
 2434 02a8 0220A0E3 		mov	r2, #2
 2435 02ac 0020C3E5 		strb	r2, [r3, #0]
 191:../proyecto.c ****                         ticks = 50;
 2436              		.loc 1 191 0
 2437 02b0 50349FE5 		ldr	r3, .L32+20
 2438 02b4 3220A0E3 		mov	r2, #50
 2439 02b8 B020C3E1 		strh	r2, [r3, #0]	@ movhi
 2440 02bc 0A0000EA 		b	.L17
 2441              	.L18:
 192:../proyecto.c ****                     }
 193:../proyecto.c ****                     else {
 194:../proyecto.c ****                         showPlaceOccupiedMessage(selectedPlace);
 2442              		.loc 1 194 0
 2443 02c0 4C349FE5 		ldr	r3, .L32+32
 2444 02c4 0030D3E5 		ldrb	r3, [r3, #0]
 2445 02c8 FF3003E2 		and	r3, r3, #255
 2446 02cc 0300A0E1 		mov	r0, r3
 2447 02d0 FEFFFFEB 		bl	showPlaceOccupiedMessage
 195:../proyecto.c ****                         state = SELECT_PLACE;
 2448              		.loc 1 195 0
 2449 02d4 20349FE5 		ldr	r3, .L32+8
 2450 02d8 0120A0E3 		mov	r2, #1
 2451 02dc 0020C3E5 		strb	r2, [r3, #0]
 196:../proyecto.c ****                         ticks = 500;
 2452              		.loc 1 196 0
 2453 02e0 20349FE5 		ldr	r3, .L32+20
 2454 02e4 7D2FA0E3 		mov	r2, #500
 2455 02e8 B020C3E1 		strh	r2, [r3, #0]	@ movhi
 2456              	.L17:
 197:../proyecto.c ****                     }
 198:../proyecto.c ****                 }
 199:../proyecto.c ****             }
 200:../proyecto.c ****             // Seguimos rechazando monedas durante la seleccion de plaza
 201:../proyecto.c ****             if (coinAcceptorMsg.flag) {
 2457              		.loc 1 201 0
 2458 02ec 18349FE5 		ldr	r3, .L32+24
 2459 02f0 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2460 02f4 000053E3 		cmp	r3, #0
 2461 02f8 F500000A 		beq	.L29
 202:../proyecto.c ****                 coinAcceptorMsg.flag = FALSE;
 2462              		.loc 1 202 0
 2463 02fc 08349FE5 		ldr	r3, .L32+24
 2464 0300 0020A0E3 		mov	r2, #0
 2465 0304 0020C3E5 		strb	r2, [r3, #0]
 203:../proyecto.c ****                 coinsMoverMsg.accept = FALSE;
 2466              		.loc 1 203 0
 2467 0308 00349FE5 		ldr	r3, .L32+28
 2468 030c 0020A0E3 		mov	r2, #0
 2469 0310 0120C3E5 		strb	r2, [r3, #1]
 204:../proyecto.c ****                 coinsMoverMsg.flag = TRUE;
 2470              		.loc 1 204 0
 2471 0314 F4339FE5 		ldr	r3, .L32+28
 2472 0318 0120A0E3 		mov	r2, #1
 2473 031c 0020C3E5 		strb	r2, [r3, #0]
 205:../proyecto.c ****             }
 206:../proyecto.c ****             break;
 2474              		.loc 1 206 0
 2475 0320 F00000EA 		b	.L5
 2476              	.L10:
 207:../proyecto.c ****         case SHOW_TARIFF:  // Procesamos monedas introducidas
 208:../proyecto.c ****             if (!(--ticks)) // Timeout de inactividad (5 segundos)
 2477              		.loc 1 208 0
 2478 0324 DC339FE5 		ldr	r3, .L32+20
 2479 0328 B030D3E1 		ldrh	r3, [r3, #0]
 2480 032c 013043E2 		sub	r3, r3, #1
 2481 0330 0338A0E1 		mov	r3, r3, asl #16
 2482 0334 2328A0E1 		mov	r2, r3, lsr #16
 2483 0338 C8339FE5 		ldr	r3, .L32+20
 2484 033c B020C3E1 		strh	r2, [r3, #0]	@ movhi
 2485 0340 C0339FE5 		ldr	r3, .L32+20
 2486 0344 B030D3E1 		ldrh	r3, [r3, #0]
 2487 0348 000053E3 		cmp	r3, #0
 2488 034c 0D00001A 		bne	.L20
 209:../proyecto.c ****             {
 210:../proyecto.c ****                 plotWelcomeScreen();
 2489              		.loc 1 210 0
 2490 0350 FEFFFFEB 		bl	plotWelcomeScreen
 211:../proyecto.c ****                 // Devolvemos las monedas introducidas
 212:../proyecto.c ****                 if (credit > 0)
 2491              		.loc 1 212 0
 2492 0354 9C339FE5 		ldr	r3, .L32+4
 2493 0358 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2494 035c 000053E3 		cmp	r3, #0
 2495 0360 0500000A 		beq	.L21
 213:../proyecto.c ****                 {
 214:../proyecto.c **** 
 215:../proyecto.c ****                     coinsMoverMsg.flag = TRUE;
 2496              		.loc 1 215 0
 2497 0364 A4339FE5 		ldr	r3, .L32+28
 2498 0368 0120A0E3 		mov	r2, #1
 2499 036c 0020C3E5 		strb	r2, [r3, #0]
 216:../proyecto.c ****                     credit = 0;
 2500              		.loc 1 216 0
 2501 0370 80339FE5 		ldr	r3, .L32+4
 2502 0374 0020A0E3 		mov	r2, #0
 2503 0378 0020C3E5 		strb	r2, [r3, #0]
 2504              	.L21:
 217:../proyecto.c ****                 }
 218:../proyecto.c **** 
 219:../proyecto.c ****                 state = WELCOME_SCREEN;
 2505              		.loc 1 219 0
 2506 037c 78339FE5 		ldr	r3, .L32+8
 2507 0380 0020A0E3 		mov	r2, #0
 2508 0384 0020C3E5 		strb	r2, [r3, #0]
 2509              	.L20:
 220:../proyecto.c ****             }
 221:../proyecto.c **** 
 222:../proyecto.c ****             // Procesamos monedas introducidas
 223:../proyecto.c ****             if (coinAcceptorMsg.flag)
 2510              		.loc 1 223 0
 2511 0388 7C339FE5 		ldr	r3, .L32+24
 2512 038c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2513 0390 000053E3 		cmp	r3, #0
 2514 0394 4000000A 		beq	.L22
 224:../proyecto.c ****             {
 225:../proyecto.c ****             	ticks = 50;   /* Restaura el tiempo maximo sin actividad que permanece en este estado 
 2515              		.loc 1 225 0
 2516 0398 68339FE5 		ldr	r3, .L32+20
 2517 039c 3220A0E3 		mov	r2, #50
 2518 03a0 B020C3E1 		strh	r2, [r3, #0]	@ movhi
 226:../proyecto.c ****                 coinAcceptorMsg.flag = FALSE;	/* Marca el mensaje como leido */
 2519              		.loc 1 226 0
 2520 03a4 60339FE5 		ldr	r3, .L32+24
 2521 03a8 0020A0E3 		mov	r2, #0
 2522 03ac 0020C3E5 		strb	r2, [r3, #0]
 227:../proyecto.c **** 
 228:../proyecto.c **** 
 229:../proyecto.c ****                 // Verificamos que no nos pasemos del maximo (240 centimos)
 230:../proyecto.c ****                 if (credit + coinAcceptorMsg.cents <= 240)
 2523              		.loc 1 230 0
 2524 03b0 40339FE5 		ldr	r3, .L32+4
 2525 03b4 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2526 03b8 0320A0E1 		mov	r2, r3
 2527 03bc 48339FE5 		ldr	r3, .L32+24
 2528 03c0 0130D3E5 		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2529 03c4 033082E0 		add	r3, r2, r3
 2530 03c8 F00053E3 		cmp	r3, #240
 2531 03cc 190000CA 		bgt	.L23
 231:../proyecto.c ****                 {
 232:../proyecto.c ****                 	coinsMoverMsg.accept = TRUE;//acepta monedas
 2532              		.loc 1 232 0
 2533 03d0 38339FE5 		ldr	r3, .L32+28
 2534 03d4 0120A0E3 		mov	r2, #1
 2535 03d8 0120C3E5 		strb	r2, [r3, #1]
 233:../proyecto.c ****                 	coinsMoverMsg.flag = TRUE;//levanta flag
 2536              		.loc 1 233 0
 2537 03dc 2C339FE5 		ldr	r3, .L32+28
 2538 03e0 0120A0E3 		mov	r2, #1
 2539 03e4 0020C3E5 		strb	r2, [r3, #0]
 234:../proyecto.c ****                     credit += coinAcceptorMsg.cents;
 2540              		.loc 1 234 0
 2541 03e8 1C339FE5 		ldr	r3, .L32+24
 2542 03ec 0120D3E5 		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 2543 03f0 00339FE5 		ldr	r3, .L32+4
 2544 03f4 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2545 03f8 033082E0 		add	r3, r2, r3
 2546 03fc FF2003E2 		and	r2, r3, #255
 2547 0400 F0329FE5 		ldr	r3, .L32+4
 2548 0404 0020C3E5 		strb	r2, [r3, #0]
 235:../proyecto.c ****                     coinAcceptorMsg.cents = 0;
 2549              		.loc 1 235 0
 2550 0408 FC329FE5 		ldr	r3, .L32+24
 2551 040c 0020A0E3 		mov	r2, #0
 2552 0410 0120C3E5 		strb	r2, [r3, #1]
 236:../proyecto.c ****                     // Actualizar toda la pantalla de tarifa con el nuevo credito
 237:../proyecto.c ****                     showTariffScreen(selectedPlace, credit);
 2553              		.loc 1 237 0
 2554 0414 F8329FE5 		ldr	r3, .L32+32
 2555 0418 0030D3E5 		ldrb	r3, [r3, #0]
 2556 041c FF2003E2 		and	r2, r3, #255
 2557 0420 D0329FE5 		ldr	r3, .L32+4
 2558 0424 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2559 0428 0200A0E1 		mov	r0, r2
 2560 042c 0310A0E1 		mov	r1, r3
 2561 0430 FEFFFFEB 		bl	showTariffScreen
 2562 0434 180000EA 		b	.L22
 2563              	.L23:
 238:../proyecto.c ****                 }
 239:../proyecto.c ****                 else
 240:../proyecto.c ****                 {
 241:../proyecto.c ****                 	coinsMoverMsg.accept = FALSE;// no acepta monedas
 2564              		.loc 1 241 0
 2565 0438 D0329FE5 		ldr	r3, .L32+28
 2566 043c 0020A0E3 		mov	r2, #0
 2567 0440 0120C3E5 		strb	r2, [r3, #1]
 242:../proyecto.c ****                 	coinsMoverMsg.flag = TRUE;//levanta flag
 2568              		.loc 1 242 0
 2569 0444 C4329FE5 		ldr	r3, .L32+28
 2570 0448 0120A0E3 		mov	r2, #1
 2571 044c 0020C3E5 		strb	r2, [r3, #0]
 243:../proyecto.c **** 
 244:../proyecto.c ****                     credit = 0;
 2572              		.loc 1 244 0
 2573 0450 A0329FE5 		ldr	r3, .L32+4
 2574 0454 0020A0E3 		mov	r2, #0
 2575 0458 0020C3E5 		strb	r2, [r3, #0]
 245:../proyecto.c ****                     coinAcceptorMsg.cents = 0;
 2576              		.loc 1 245 0
 2577 045c A8329FE5 		ldr	r3, .L32+24
 2578 0460 0020A0E3 		mov	r2, #0
 2579 0464 0120C3E5 		strb	r2, [r3, #1]
 246:../proyecto.c ****                     ticks = 500;  //Restauro ticks se SELECT_PLACE
 2580              		.loc 1 246 0
 2581 0468 98329FE5 		ldr	r3, .L32+20
 2582 046c 7D2FA0E3 		mov	r2, #500
 2583 0470 B020C3E1 		strh	r2, [r3, #0]	@ movhi
 247:../proyecto.c ****                     lcd_clear();
 2584              		.loc 1 247 0
 2585 0474 FEFFFFEB 		bl	lcd_clear
 248:../proyecto.c ****                     //Preparo cambio de estado a SELECT_PLACE
 249:../proyecto.c ****                     lcd_puts_x2(24, 24, BLACK, "Seleccione plaza");
 2586              		.loc 1 249 0
 2587 0478 1800A0E3 		mov	r0, #24
 2588 047c 1810A0E3 		mov	r1, #24
 2589 0480 0F20A0E3 		mov	r2, #15
 2590 0484 78329FE5 		ldr	r3, .L32+16
 2591 0488 FEFFFFEB 		bl	lcd_puts_x2
 250:../proyecto.c ****                     drawParkingGrid();
 2592              		.loc 1 250 0
 2593 048c FEFFFFEB 		bl	drawParkingGrid
 251:../proyecto.c ****                     state = SELECT_PLACE;
 2594              		.loc 1 251 0
 2595 0490 64329FE5 		ldr	r3, .L32+8
 2596 0494 0120A0E3 		mov	r2, #1
 2597 0498 0020C3E5 		strb	r2, [r3, #0]
 2598              	.L22:
 252:../proyecto.c ****                 }
 253:../proyecto.c ****             }
 254:../proyecto.c **** 
 255:../proyecto.c ****             // Si se pulsa la pantalla, verificamos el credito
 256:../proyecto.c ****             if (tsPressedMsg.flag)
 2599              		.loc 1 256 0
 2600 049c 5C329FE5 		ldr	r3, .L32+12
 2601 04a0 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2602 04a4 000053E3 		cmp	r3, #0
 2603 04a8 8B00000A 		beq	.L30
 257:../proyecto.c ****             {
 258:../proyecto.c ****                 tsPressedMsg.flag = FALSE;
 2604              		.loc 1 258 0
 2605 04ac 4C329FE5 		ldr	r3, .L32+12
 2606 04b0 0020A0E3 		mov	r2, #0
 2607 04b4 0020C3E5 		strb	r2, [r3, #0]
 259:../proyecto.c ****                 state = PROCESS_PAYMENT;
 2608              		.loc 1 259 0
 2609 04b8 3C329FE5 		ldr	r3, .L32+8
 2610 04bc 0320A0E3 		mov	r2, #3
 2611 04c0 0020C3E5 		strb	r2, [r3, #0]
 260:../proyecto.c ****             }
 261:../proyecto.c ****             break;
 2612              		.loc 1 261 0
 2613 04c4 870000EA 		b	.L5
 2614              	.L11:
 262:../proyecto.c ****         case PROCESS_PAYMENT: // Estado donde se valora el credito introducido una vez se pulsa la 
 263:../proyecto.c ****             if (credit < 20) // Credito insuficiente
 2615              		.loc 1 263 0
 2616 04c8 28329FE5 		ldr	r3, .L32+4
 2617 04cc 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2618 04d0 130053E3 		cmp	r3, #19
 2619 04d4 1900008A 		bhi	.L25
 264:../proyecto.c ****             {
 265:../proyecto.c ****                 lcd_clear();
 2620              		.loc 1 265 0
 2621 04d8 FEFFFFEB 		bl	lcd_clear
 266:../proyecto.c ****                 lcd_puts(24, 48, BLACK, "Saldo insuficiente");
 2622              		.loc 1 266 0
 2623 04dc 1800A0E3 		mov	r0, #24
 2624 04e0 3010A0E3 		mov	r1, #48
 2625 04e4 0F20A0E3 		mov	r2, #15
 2626 04e8 2C329FE5 		ldr	r3, .L32+40
 2627 04ec FEFFFFEB 		bl	lcd_puts
 267:../proyecto.c ****                 credit = 0;
 2628              		.loc 1 267 0
 2629 04f0 00329FE5 		ldr	r3, .L32+4
 2630 04f4 0020A0E3 		mov	r2, #0
 2631 04f8 0020C3E5 		strb	r2, [r3, #0]
 268:../proyecto.c ****                 sw_delay_ms(2000);
 2632              		.loc 1 268 0
 2633 04fc 7D0EA0E3 		mov	r0, #2000
 2634 0500 FEFFFFEB 		bl	sw_delay_ms
 269:../proyecto.c ****                 state = SHOW_TARIFF;
 2635              		.loc 1 269 0
 2636 0504 F0319FE5 		ldr	r3, .L32+8
 2637 0508 0220A0E3 		mov	r2, #2
 2638 050c 0020C3E5 		strb	r2, [r3, #0]
 270:../proyecto.c ****                 showTariffScreen(selectedPlace, credit);
 2639              		.loc 1 270 0
 2640 0510 FC319FE5 		ldr	r3, .L32+32
 2641 0514 0030D3E5 		ldrb	r3, [r3, #0]
 2642 0518 FF2003E2 		and	r2, r3, #255
 2643 051c D4319FE5 		ldr	r3, .L32+4
 2644 0520 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2645 0524 0200A0E1 		mov	r0, r2
 2646 0528 0310A0E1 		mov	r1, r3
 2647 052c FEFFFFEB 		bl	showTariffScreen
 271:../proyecto.c ****                 ticks = 50;
 2648              		.loc 1 271 0
 2649 0530 D0319FE5 		ldr	r3, .L32+20
 2650 0534 3220A0E3 		mov	r2, #50
 2651 0538 B020C3E1 		strh	r2, [r3, #0]	@ movhi
 272:../proyecto.c ****             }
 273:../proyecto.c ****             else // Credito valido, procesamos el pago
 274:../proyecto.c ****             {
 275:../proyecto.c ****             	lcd_clear();
 276:../proyecto.c ****             	lcd_puts(24, 48, BLACK, "Procesando pago...");
 277:../proyecto.c **** 
 278:../proyecto.c **** 
 279:../proyecto.c ****                 // Obtenemos la hora actual, aunque la estamos obteniendo cada segundo de reloj
 280:../proyecto.c ****                 rtc_gettime(&actual_time);
 281:../proyecto.c **** 
 282:../proyecto.c ****                 // Actualizamos la informacion de la plaza
 283:../proyecto.c ****                 parking[selectedPlace - 1].occupied = TRUE;
 284:../proyecto.c ****                 parking[selectedPlace - 1].startTime = actual_time;  // Tiempo inicial en minutos
 285:../proyecto.c **** 
 286:../proyecto.c ****                 //Calculo el timpo final
 287:../proyecto.c ****                 parking[selectedPlace - 1].endTime = parking[selectedPlace - 1].startTime;
 288:../proyecto.c ****                 // Aplico los creditos
 289:../proyecto.c ****                 apply_credits(&parking[selectedPlace - 1].endTime, credit);
 290:../proyecto.c **** 
 291:../proyecto.c **** 
 292:../proyecto.c ****                 // Activamos la impresion del ticket
 293:../proyecto.c ****                        printTicketFlag = TRUE;
 294:../proyecto.c ****                 state = PRINT_TICKET;
 295:../proyecto.c **** 
 296:../proyecto.c ****                 sw_delay_ms(2000);//una vez finalizado pago, delay de lectura
 297:../proyecto.c ****             }
 298:../proyecto.c ****             break;
 2652              		.loc 1 298 0
 2653 053c 690000EA 		b	.L5
 2654              	.L25:
 275:../proyecto.c ****             	lcd_clear();
 2655              		.loc 1 275 0
 2656 0540 FEFFFFEB 		bl	lcd_clear
 276:../proyecto.c ****             	lcd_puts(24, 48, BLACK, "Procesando pago...");
 2657              		.loc 1 276 0
 2658 0544 1800A0E3 		mov	r0, #24
 2659 0548 3010A0E3 		mov	r1, #48
 2660 054c 0F20A0E3 		mov	r2, #15
 2661 0550 C8319FE5 		ldr	r3, .L32+44
 2662 0554 FEFFFFEB 		bl	lcd_puts
 280:../proyecto.c ****                 rtc_gettime(&actual_time);
 2663              		.loc 1 280 0
 2664 0558 C4019FE5 		ldr	r0, .L32+48
 2665 055c FEFFFFEB 		bl	rtc_gettime
 283:../proyecto.c ****                 parking[selectedPlace - 1].occupied = TRUE;
 2666              		.loc 1 283 0
 2667 0560 AC319FE5 		ldr	r3, .L32+32
 2668 0564 0030D3E5 		ldrb	r3, [r3, #0]
 2669 0568 FF3003E2 		and	r3, r3, #255
 2670 056c 012043E2 		sub	r2, r3, #1
 2671 0570 A0019FE5 		ldr	r0, .L32+36
 2672 0574 0810A0E3 		mov	r1, #8
 2673 0578 0230A0E1 		mov	r3, r2
 2674 057c 0332A0E1 		mov	r3, r3, asl #4
 2675 0580 033062E0 		rsb	r3, r2, r3
 2676 0584 033080E0 		add	r3, r0, r3
 2677 0588 013083E0 		add	r3, r3, r1
 2678 058c 0120A0E3 		mov	r2, #1
 2679 0590 0620C3E5 		strb	r2, [r3, #6]
 284:../proyecto.c ****                 parking[selectedPlace - 1].startTime = actual_time;  // Tiempo inicial en minutos
 2680              		.loc 1 284 0
 2681 0594 78319FE5 		ldr	r3, .L32+32
 2682 0598 0030D3E5 		ldrb	r3, [r3, #0]
 2683 059c FF3003E2 		and	r3, r3, #255
 2684 05a0 012043E2 		sub	r2, r3, #1
 2685 05a4 6C119FE5 		ldr	r1, .L32+36
 2686 05a8 0230A0E1 		mov	r3, r2
 2687 05ac 0332A0E1 		mov	r3, r3, asl #4
 2688 05b0 033062E0 		rsb	r3, r2, r3
 2689 05b4 032081E0 		add	r2, r1, r3
 2690 05b8 64319FE5 		ldr	r3, .L32+48
 2691 05bc 0210A0E1 		mov	r1, r2
 2692 05c0 0320A0E1 		mov	r2, r3
 2693 05c4 0730A0E3 		mov	r3, #7
 2694 05c8 0100A0E1 		mov	r0, r1
 2695 05cc 0210A0E1 		mov	r1, r2
 2696 05d0 0320A0E1 		mov	r2, r3
 2697 05d4 FEFFFFEB 		bl	memcpy
 287:../proyecto.c ****                 parking[selectedPlace - 1].endTime = parking[selectedPlace - 1].startTime;
 2698              		.loc 1 287 0
 2699 05d8 34319FE5 		ldr	r3, .L32+32
 2700 05dc 0030D3E5 		ldrb	r3, [r3, #0]
 2701 05e0 FF3003E2 		and	r3, r3, #255
 2702 05e4 011043E2 		sub	r1, r3, #1
 2703 05e8 24319FE5 		ldr	r3, .L32+32
 2704 05ec 0030D3E5 		ldrb	r3, [r3, #0]
 2705 05f0 FF3003E2 		and	r3, r3, #255
 2706 05f4 012043E2 		sub	r2, r3, #1
 2707 05f8 18019FE5 		ldr	r0, .L32+36
 2708 05fc 0130A0E1 		mov	r3, r1
 2709 0600 0332A0E1 		mov	r3, r3, asl #4
 2710 0604 033061E0 		rsb	r3, r1, r3
 2711 0608 031080E0 		add	r1, r0, r3
 2712 060c 04019FE5 		ldr	r0, .L32+36
 2713 0610 0230A0E1 		mov	r3, r2
 2714 0614 0332A0E1 		mov	r3, r3, asl #4
 2715 0618 033062E0 		rsb	r3, r2, r3
 2716 061c 033080E0 		add	r3, r0, r3
 2717 0620 071081E2 		add	r1, r1, #7
 2718 0624 0320A0E1 		mov	r2, r3
 2719 0628 0730A0E3 		mov	r3, #7
 2720 062c 0100A0E1 		mov	r0, r1
 2721 0630 0210A0E1 		mov	r1, r2
 2722 0634 0320A0E1 		mov	r2, r3
 2723 0638 FEFFFFEB 		bl	memcpy
 289:../proyecto.c ****                 apply_credits(&parking[selectedPlace - 1].endTime, credit);
 2724              		.loc 1 289 0
 2725 063c D0309FE5 		ldr	r3, .L32+32
 2726 0640 0030D3E5 		ldrb	r3, [r3, #0]
 2727 0644 FF3003E2 		and	r3, r3, #255
 2728 0648 012043E2 		sub	r2, r3, #1
 2729 064c 0230A0E1 		mov	r3, r2
 2730 0650 0332A0E1 		mov	r3, r3, asl #4
 2731 0654 033062E0 		rsb	r3, r2, r3
 2732 0658 B8209FE5 		ldr	r2, .L32+36
 2733 065c 023083E0 		add	r3, r3, r2
 2734 0660 072083E2 		add	r2, r3, #7
 2735 0664 8C309FE5 		ldr	r3, .L32+4
 2736 0668 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2737 066c 0200A0E1 		mov	r0, r2
 2738 0670 0310A0E1 		mov	r1, r3
 2739 0674 FEFFFFEB 		bl	apply_credits
 293:../proyecto.c ****                        printTicketFlag = TRUE;
 2740              		.loc 1 293 0
 2741 0678 A8309FE5 		ldr	r3, .L32+52
 2742 067c 0120A0E3 		mov	r2, #1
 2743 0680 0020C3E5 		strb	r2, [r3, #0]
 294:../proyecto.c ****                 state = PRINT_TICKET;
 2744              		.loc 1 294 0
 2745 0684 70309FE5 		ldr	r3, .L32+8
 2746 0688 0420A0E3 		mov	r2, #4
 2747 068c 0020C3E5 		strb	r2, [r3, #0]
 296:../proyecto.c ****                 sw_delay_ms(2000);//una vez finalizado pago, delay de lectura
 2748              		.loc 1 296 0
 2749 0690 7D0EA0E3 		mov	r0, #2000
 2750 0694 FEFFFFEB 		bl	sw_delay_ms
 2751              		.loc 1 298 0
 2752 0698 120000EA 		b	.L5
 2753              	.L12:
 299:../proyecto.c ****         case PRINT_TICKET:
 300:../proyecto.c ****             // Esperamos a que se complete la impresion
 301:../proyecto.c ****             if (!printTicketFlag)
 2754              		.loc 1 301 0
 2755 069c 84309FE5 		ldr	r3, .L32+52
 2756 06a0 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2757 06a4 000053E3 		cmp	r3, #0
 2758 06a8 0D00001A 		bne	.L31
 302:../proyecto.c ****             {
 303:../proyecto.c ****                 plotWelcomeScreen();
 2759              		.loc 1 303 0
 2760 06ac FEFFFFEB 		bl	plotWelcomeScreen
 304:../proyecto.c ****                 credit = 0;
 2761              		.loc 1 304 0
 2762 06b0 40309FE5 		ldr	r3, .L32+4
 2763 06b4 0020A0E3 		mov	r2, #0
 2764 06b8 0020C3E5 		strb	r2, [r3, #0]
 305:../proyecto.c ****                 state = WELCOME_SCREEN;
 2765              		.loc 1 305 0
 2766 06bc 38309FE5 		ldr	r3, .L32+8
 2767 06c0 0020A0E3 		mov	r2, #0
 2768 06c4 0020C3E5 		strb	r2, [r3, #0]
 306:../proyecto.c ****             }
 307:../proyecto.c ****             break;
 2769              		.loc 1 307 0
 2770 06c8 060000EA 		b	.L5
 2771              	.L28:
 174:../proyecto.c ****         break;
 2772              		.loc 1 174 0
 2773 06cc 0000A0E1 		mov	r0, r0	@ nop
 2774 06d0 040000EA 		b	.L5
 2775              	.L29:
 206:../proyecto.c ****             break;
 2776              		.loc 1 206 0
 2777 06d4 0000A0E1 		mov	r0, r0	@ nop
 2778 06d8 020000EA 		b	.L5
 2779              	.L30:
 261:../proyecto.c ****             break;
 2780              		.loc 1 261 0
 2781 06dc 0000A0E1 		mov	r0, r0	@ nop
 2782 06e0 000000EA 		b	.L5
 2783              	.L31:
 2784              		.loc 1 307 0
 2785 06e4 0000A0E1 		mov	r0, r0	@ nop
 2786              	.L5:
 308:../proyecto.c ****         }
 309:../proyecto.c ****     }
 2787              		.loc 1 309 0
 2788 06e8 0CD04BE2 		sub	sp, fp, #12
 2789 06ec 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2790 06f0 1EFF2FE1 		bx	lr
 2791              	.L33:
 2792              		.align	2
 2793              	.L32:
 2794 06f4 03000000 		.word	init.4237
 2795 06f8 0A000000 		.word	credit.4239
 2796 06fc 0B000000 		.word	state.4238
 2797 0700 00000000 		.word	tsPressedMsg
 2798 0704 00000000 		.word	.LC0
 2799 0708 0C000000 		.word	ticks.4240
 2800 070c 00000000 		.word	coinAcceptorMsg
 2801 0710 00000000 		.word	coinsMoverMsg
 2802 0714 00000000 		.word	selectedPlace
 2803 0718 00000000 		.word	parking
 2804 071c 14000000 		.word	.LC1
 2805 0720 28000000 		.word	.LC2
 2806 0724 00000000 		.word	actual_time
 2807 0728 00000000 		.word	printTicketFlag
 2808              		.cfi_endproc
 2809              	.LFE1:
 2811              		.section	.rodata
 2812 003b 00       		.align	2
 2813              	.LC3:
 2814 003c 2D2D2D2D 		.ascii	"--------------------------------\012\000"
 2814      2D2D2D2D 
 2814      2D2D2D2D 
 2814      2D2D2D2D 
 2814      2D2D2D2D 
 2815 005e 0000     		.align	2
 2816              	.LC4:
 2817 0060 506C617A 		.ascii	"Plaza \000"
 2817      612000
 2818 0067 00       		.align	2
 2819              	.LC5:
 2820 0068 0A00     		.ascii	"\012\000"
 2821 006a 0000     		.align	2
 2822              	.LC6:
 2823 006c 46696E20 		.ascii	"Fin de estacionamiento:\012\000"
 2823      64652065 
 2823      73746163 
 2823      696F6E61 
 2823      6D69656E 
 2824              		.text
 2825              		.align	2
 2826              		.global	ticketPrinterTask
 2828              	ticketPrinterTask:
 2829              	.LFB2:
 310:../proyecto.c **** 
 311:../proyecto.c **** 
 312:../proyecto.c **** /*
 313:../proyecto.c **** ** Emula el comportamiento de la impresora de tickets:
 314:../proyecto.c **** **   Cada segundo muestrea si ha recibido un mensaje de la tarea principal enviar a traves de la UA
 315:../proyecto.c **** */
 316:../proyecto.c **** void ticketPrinterTask(void)//Revisado
 317:../proyecto.c **** {
 2830              		.loc 1 317 0
 2831              		.cfi_startproc
 2832              		@ Function supports interworking.
 2833              		@ args = 0, pretend = 0, frame = 0
 2834              		@ frame_needed = 1, uses_anonymous_args = 0
 2835 072c 0DC0A0E1 		mov	ip, sp
 2836              	.LCFI4:
 2837              		.cfi_def_cfa_register 12
 2838 0730 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2839 0734 04B04CE2 		sub	fp, ip, #4
 2840              		.cfi_offset 14, -8
 2841              		.cfi_offset 13, -12
 2842              		.cfi_offset 11, -16
 2843              	.LCFI5:
 2844              		.cfi_def_cfa 11, 4
 318:../proyecto.c ****     if (printTicketFlag)
 2845              		.loc 1 318 0
 2846 0738 AC319FE5 		ldr	r3, .L36
 2847 073c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2848 0740 000053E3 		cmp	r3, #0
 2849 0744 6500000A 		beq	.L34
 319:../proyecto.c ****     {
 320:../proyecto.c ****         // Imprimimos una línea de guiones como separador
 321:../proyecto.c ****         uart0_puts("--------------------------------\n");
 2850              		.loc 1 321 0
 2851 0748 A0019FE5 		ldr	r0, .L36+4
 2852 074c FEFFFFEB 		bl	uart0_puts
 322:../proyecto.c **** 
 323:../proyecto.c ****         // Primera línea: número de plaza
 324:../proyecto.c ****         uart0_puts("Plaza ");
 2853              		.loc 1 324 0
 2854 0750 9C019FE5 		ldr	r0, .L36+8
 2855 0754 FEFFFFEB 		bl	uart0_puts
 325:../proyecto.c ****         uart0_putint(selectedPlace);
 2856              		.loc 1 325 0
 2857 0758 98319FE5 		ldr	r3, .L36+12
 2858 075c 0030D3E5 		ldrb	r3, [r3, #0]
 2859 0760 FF3003E2 		and	r3, r3, #255
 2860 0764 0300A0E1 		mov	r0, r3
 2861 0768 FEFFFFEB 		bl	uart0_putint
 326:../proyecto.c ****         uart0_puts("\n");
 2862              		.loc 1 326 0
 2863 076c 88019FE5 		ldr	r0, .L36+16
 2864 0770 FEFFFFEB 		bl	uart0_puts
 327:../proyecto.c **** 
 328:../proyecto.c ****         // Segunda línea: "Fin de estacionamiento:"
 329:../proyecto.c ****         uart0_puts("Fin de estacionamiento:\n");
 2865              		.loc 1 329 0
 2866 0774 84019FE5 		ldr	r0, .L36+20
 2867 0778 FEFFFFEB 		bl	uart0_puts
 330:../proyecto.c **** 
 331:../proyecto.c ****         // Tercera línea: Fecha de fin, por ahora he dejado los segundos tambien ya que al comparar
 332:../proyecto.c ****         // los estoy teniendo en cuenta, habría que cambiarlo ya que en la demo no tiene en cuenta 
 333:../proyecto.c ****                uart0_puts(calculate_weekday(parking[selectedPlace-1].endTime.wday)+',' + parking[se
 2868              		.loc 1 333 0
 2869 077c 74319FE5 		ldr	r3, .L36+12
 2870 0780 0030D3E5 		ldrb	r3, [r3, #0]
 2871 0784 FF3003E2 		and	r3, r3, #255
 2872 0788 012043E2 		sub	r2, r3, #1
 2873 078c 70119FE5 		ldr	r1, .L36+24
 2874 0790 0230A0E1 		mov	r3, r2
 2875 0794 0332A0E1 		mov	r3, r3, asl #4
 2876 0798 033062E0 		rsb	r3, r2, r3
 2877 079c 033081E0 		add	r3, r1, r3
 2878 07a0 0B30D3E5 		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 2879 07a4 0300A0E1 		mov	r0, r3
 2880 07a8 FEFFFFEB 		bl	calculate_weekday
 2881 07ac 0010A0E1 		mov	r1, r0
 2882 07b0 40319FE5 		ldr	r3, .L36+12
 2883 07b4 0030D3E5 		ldrb	r3, [r3, #0]
 2884 07b8 FF3003E2 		and	r3, r3, #255
 2885 07bc 012043E2 		sub	r2, r3, #1
 2886 07c0 3C019FE5 		ldr	r0, .L36+24
 2887 07c4 0230A0E1 		mov	r3, r2
 2888 07c8 0332A0E1 		mov	r3, r3, asl #4
 2889 07cc 033062E0 		rsb	r3, r2, r3
 2890 07d0 033080E0 		add	r3, r0, r3
 2891 07d4 0A30D3E5 		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 2892 07d8 0300A0E1 		mov	r0, r3
 2893 07dc 14319FE5 		ldr	r3, .L36+12
 2894 07e0 0030D3E5 		ldrb	r3, [r3, #0]
 2895 07e4 FF3003E2 		and	r3, r3, #255
 2896 07e8 012043E2 		sub	r2, r3, #1
 2897 07ec 10C19FE5 		ldr	ip, .L36+24
 2898 07f0 0230A0E1 		mov	r3, r2
 2899 07f4 0332A0E1 		mov	r3, r3, asl #4
 2900 07f8 033062E0 		rsb	r3, r2, r3
 2901 07fc 03308CE0 		add	r3, ip, r3
 2902 0800 0C30D3E5 		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 2903 0804 030080E0 		add	r0, r0, r3
 2904 0808 E8309FE5 		ldr	r3, .L36+12
 2905 080c 0030D3E5 		ldrb	r3, [r3, #0]
 2906 0810 FF3003E2 		and	r3, r3, #255
 2907 0814 012043E2 		sub	r2, r3, #1
 2908 0818 E4C09FE5 		ldr	ip, .L36+24
 2909 081c 0230A0E1 		mov	r3, r2
 2910 0820 0332A0E1 		mov	r3, r3, asl #4
 2911 0824 033062E0 		rsb	r3, r2, r3
 2912 0828 03308CE0 		add	r3, ip, r3
 2913 082c 0D30D3E5 		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 2914 0830 030080E0 		add	r0, r0, r3
 334:../proyecto.c ****             		   parking[selectedPlace-1].endTime.hour+':'+parking[selectedPlace-1].endTime.min+':'
 2915              		.loc 1 334 0
 2916 0834 BC309FE5 		ldr	r3, .L36+12
 2917 0838 0030D3E5 		ldrb	r3, [r3, #0]
 2918 083c FF3003E2 		and	r3, r3, #255
 2919 0840 012043E2 		sub	r2, r3, #1
 2920 0844 B8C09FE5 		ldr	ip, .L36+24
 2921 0848 0230A0E1 		mov	r3, r2
 2922 084c 0332A0E1 		mov	r3, r3, asl #4
 2923 0850 033062E0 		rsb	r3, r2, r3
 2924 0854 03308CE0 		add	r3, ip, r3
 2925 0858 0930D3E5 		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 333:../proyecto.c ****                uart0_puts(calculate_weekday(parking[selectedPlace-1].endTime.wday)+',' + parking[se
 2926              		.loc 1 333 0
 2927 085c 030080E0 		add	r0, r0, r3
 2928              		.loc 1 334 0
 2929 0860 90309FE5 		ldr	r3, .L36+12
 2930 0864 0030D3E5 		ldrb	r3, [r3, #0]
 2931 0868 FF3003E2 		and	r3, r3, #255
 2932 086c 012043E2 		sub	r2, r3, #1
 2933 0870 8CC09FE5 		ldr	ip, .L36+24
 2934 0874 0230A0E1 		mov	r3, r2
 2935 0878 0332A0E1 		mov	r3, r3, asl #4
 2936 087c 033062E0 		rsb	r3, r2, r3
 2937 0880 03308CE0 		add	r3, ip, r3
 2938 0884 0830D3E5 		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 2939 0888 030080E0 		add	r0, r0, r3
 2940 088c 64309FE5 		ldr	r3, .L36+12
 2941 0890 0030D3E5 		ldrb	r3, [r3, #0]
 2942 0894 FF3003E2 		and	r3, r3, #255
 2943 0898 012043E2 		sub	r2, r3, #1
 2944 089c 60C09FE5 		ldr	ip, .L36+24
 2945 08a0 0230A0E1 		mov	r3, r2
 2946 08a4 0332A0E1 		mov	r3, r3, asl #4
 2947 08a8 033062E0 		rsb	r3, r2, r3
 2948 08ac 03308CE0 		add	r3, ip, r3
 2949 08b0 0730D3E5 		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 2950 08b4 033080E0 		add	r3, r0, r3
 2951 08b8 473F83E2 		add	r3, r3, #284
 2952 08bc 023083E2 		add	r3, r3, #2
 333:../proyecto.c ****                uart0_puts(calculate_weekday(parking[selectedPlace-1].endTime.wday)+',' + parking[se
 2953              		.loc 1 333 0
 2954 08c0 033081E0 		add	r3, r1, r3
 2955 08c4 0300A0E1 		mov	r0, r3
 2956 08c8 FEFFFFEB 		bl	uart0_puts
 335:../proyecto.c **** 
 336:../proyecto.c ****         // Línea separadora final
 337:../proyecto.c ****         uart0_puts("--------------------------------\n");
 2957              		.loc 1 337 0
 2958 08cc 1C009FE5 		ldr	r0, .L36+4
 2959 08d0 FEFFFFEB 		bl	uart0_puts
 338:../proyecto.c **** 
 339:../proyecto.c ****         printTicketFlag = FALSE;
 2960              		.loc 1 339 0
 2961 08d4 10309FE5 		ldr	r3, .L36
 2962 08d8 0020A0E3 		mov	r2, #0
 2963 08dc 0020C3E5 		strb	r2, [r3, #0]
 2964              	.L34:
 340:../proyecto.c ****     }
 341:../proyecto.c **** }
 2965              		.loc 1 341 0
 2966 08e0 0CD04BE2 		sub	sp, fp, #12
 2967 08e4 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2968 08e8 1EFF2FE1 		bx	lr
 2969              	.L37:
 2970              		.align	2
 2971              	.L36:
 2972 08ec 00000000 		.word	printTicketFlag
 2973 08f0 3C000000 		.word	.LC3
 2974 08f4 60000000 		.word	.LC4
 2975 08f8 00000000 		.word	selectedPlace
 2976 08fc 68000000 		.word	.LC5
 2977 0900 6C000000 		.word	.LC6
 2978 0904 00000000 		.word	parking
 2979              		.cfi_endproc
 2980              	.LFE2:
 2982              		.align	2
 2983              		.global	clockTask
 2985              	clockTask:
 2986              	.LFB3:
 342:../proyecto.c **** 
 343:../proyecto.c **** /*
 344:../proyecto.c **** ** Cada segundo visualiza la fecha/hora en la pantalla y libera aquellas plazas cuya hora de finali
 345:../proyecto.c **** */
 346:../proyecto.c **** void clockTask(void)//Revisado
 347:../proyecto.c **** {
 2987              		.loc 1 347 0
 2988              		.cfi_startproc
 2989              		@ Function supports interworking.
 2990              		@ args = 0, pretend = 0, frame = 8
 2991              		@ frame_needed = 1, uses_anonymous_args = 0
 2992 0908 0DC0A0E1 		mov	ip, sp
 2993              	.LCFI6:
 2994              		.cfi_def_cfa_register 12
 2995 090c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2996 0910 04B04CE2 		sub	fp, ip, #4
 2997              		.cfi_offset 14, -8
 2998              		.cfi_offset 13, -12
 2999              		.cfi_offset 11, -16
 3000              	.LCFI7:
 3001              		.cfi_def_cfa 11, 4
 3002 0914 08D04DE2 		sub	sp, sp, #8
 348:../proyecto.c **** 	uint8 i;
 349:../proyecto.c ****     //Saco la hora
 350:../proyecto.c ****     rtc_gettime(&actual_time);
 3003              		.loc 1 350 0
 3004 0918 6C029FE5 		ldr	r0, .L42
 3005 091c FEFFFFEB 		bl	rtc_gettime
 351:../proyecto.c **** 
 352:../proyecto.c ****     // Mostramos la hora
 353:../proyecto.c ****     lcd_puts(60, 8, BLACK, calculate_weekday(actual_time.wday));
 3006              		.loc 1 353 0
 3007 0920 64329FE5 		ldr	r3, .L42
 3008 0924 0430D3E5 		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3009 0928 0300A0E1 		mov	r0, r3
 3010 092c FEFFFFEB 		bl	calculate_weekday
 3011 0930 0030A0E1 		mov	r3, r0
 3012 0934 3C00A0E3 		mov	r0, #60
 3013 0938 0810A0E3 		mov	r1, #8
 3014 093c 0F20A0E3 		mov	r2, #15
 3015 0940 FEFFFFEB 		bl	lcd_puts
 354:../proyecto.c ****     lcd_putchar(84, 8, BLACK, ',');
 3016              		.loc 1 354 0
 3017 0944 5400A0E3 		mov	r0, #84
 3018 0948 0810A0E3 		mov	r1, #8
 3019 094c 0F20A0E3 		mov	r2, #15
 3020 0950 2C30A0E3 		mov	r3, #44
 3021 0954 FEFFFFEB 		bl	lcd_putchar
 355:../proyecto.c **** 	lcd_putint(92, 8, BLACK, actual_time.mday);
 3022              		.loc 1 355 0
 3023 0958 2C329FE5 		ldr	r3, .L42
 3024 095c 0330D3E5 		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 3025 0960 5C00A0E3 		mov	r0, #92
 3026 0964 0810A0E3 		mov	r1, #8
 3027 0968 0F20A0E3 		mov	r2, #15
 3028 096c FEFFFFEB 		bl	lcd_putint
 356:../proyecto.c **** 	lcd_putchar(108, 8, BLACK, '/');
 3029              		.loc 1 356 0
 3030 0970 6C00A0E3 		mov	r0, #108
 3031 0974 0810A0E3 		mov	r1, #8
 3032 0978 0F20A0E3 		mov	r2, #15
 3033 097c 2F30A0E3 		mov	r3, #47
 3034 0980 FEFFFFEB 		bl	lcd_putchar
 357:../proyecto.c **** 	lcd_putint(116, 8, BLACK, actual_time.mon);
 3035              		.loc 1 357 0
 3036 0984 00329FE5 		ldr	r3, .L42
 3037 0988 0530D3E5 		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 3038 098c 7400A0E3 		mov	r0, #116
 3039 0990 0810A0E3 		mov	r1, #8
 3040 0994 0F20A0E3 		mov	r2, #15
 3041 0998 FEFFFFEB 		bl	lcd_putint
 358:../proyecto.c **** 	lcd_putchar(132, 8, BLACK, '/');
 3042              		.loc 1 358 0
 3043 099c 8400A0E3 		mov	r0, #132
 3044 09a0 0810A0E3 		mov	r1, #8
 3045 09a4 0F20A0E3 		mov	r2, #15
 3046 09a8 2F30A0E3 		mov	r3, #47
 3047 09ac FEFFFFEB 		bl	lcd_putchar
 359:../proyecto.c **** 	lcd_putint(140, 8, BLACK, actual_time.year);
 3048              		.loc 1 359 0
 3049 09b0 D4319FE5 		ldr	r3, .L42
 3050 09b4 0630D3E5 		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 3051 09b8 8C00A0E3 		mov	r0, #140
 3052 09bc 0810A0E3 		mov	r1, #8
 3053 09c0 0F20A0E3 		mov	r2, #15
 3054 09c4 FEFFFFEB 		bl	lcd_putint
 360:../proyecto.c **** 
 361:../proyecto.c **** 	lcd_putint(176, 8, BLACK, actual_time.hour);
 3055              		.loc 1 361 0
 3056 09c8 BC319FE5 		ldr	r3, .L42
 3057 09cc 0230D3E5 		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 3058 09d0 B000A0E3 		mov	r0, #176
 3059 09d4 0810A0E3 		mov	r1, #8
 3060 09d8 0F20A0E3 		mov	r2, #15
 3061 09dc FEFFFFEB 		bl	lcd_putint
 362:../proyecto.c **** 	lcd_putchar(192, 8, BLACK, ':');
 3062              		.loc 1 362 0
 3063 09e0 C000A0E3 		mov	r0, #192
 3064 09e4 0810A0E3 		mov	r1, #8
 3065 09e8 0F20A0E3 		mov	r2, #15
 3066 09ec 3A30A0E3 		mov	r3, #58
 3067 09f0 FEFFFFEB 		bl	lcd_putchar
 363:../proyecto.c **** 	lcd_putint(200, 8, BLACK, actual_time.min);
 3068              		.loc 1 363 0
 3069 09f4 90319FE5 		ldr	r3, .L42
 3070 09f8 0130D3E5 		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3071 09fc C800A0E3 		mov	r0, #200
 3072 0a00 0810A0E3 		mov	r1, #8
 3073 0a04 0F20A0E3 		mov	r2, #15
 3074 0a08 FEFFFFEB 		bl	lcd_putint
 364:../proyecto.c **** 	lcd_putchar(216, 8, BLACK, ':');
 3075              		.loc 1 364 0
 3076 0a0c D800A0E3 		mov	r0, #216
 3077 0a10 0810A0E3 		mov	r1, #8
 3078 0a14 0F20A0E3 		mov	r2, #15
 3079 0a18 3A30A0E3 		mov	r3, #58
 3080 0a1c FEFFFFEB 		bl	lcd_putchar
 365:../proyecto.c **** 	lcd_putint(224, 8, BLACK, actual_time.sec);
 3081              		.loc 1 365 0
 3082 0a20 64319FE5 		ldr	r3, .L42
 3083 0a24 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3084 0a28 E000A0E3 		mov	r0, #224
 3085 0a2c 0810A0E3 		mov	r1, #8
 3086 0a30 0F20A0E3 		mov	r2, #15
 3087 0a34 FEFFFFEB 		bl	lcd_putint
 366:../proyecto.c **** 
 367:../proyecto.c ****     // Liberar plazas de parking cuya hora de finalización haya pasado
 368:../proyecto.c **** 
 369:../proyecto.c ****     for (i=0; i < MAXPLACES; i++) {
 3088              		.loc 1 369 0
 3089 0a38 0030A0E3 		mov	r3, #0
 3090 0a3c 0D304BE5 		strb	r3, [fp, #-13]
 3091 0a40 4B0000EA 		b	.L39
 3092              	.L41:
 370:../proyecto.c ****         if (parking[i].occupied) {
 3093              		.loc 1 370 0
 3094 0a44 0D205BE5 		ldrb	r2, [fp, #-13]	@ zero_extendqisi2
 3095 0a48 40019FE5 		ldr	r0, .L42+4
 3096 0a4c 0810A0E3 		mov	r1, #8
 3097 0a50 0230A0E1 		mov	r3, r2
 3098 0a54 0332A0E1 		mov	r3, r3, asl #4
 3099 0a58 033062E0 		rsb	r3, r2, r3
 3100 0a5c 033080E0 		add	r3, r0, r3
 3101 0a60 013083E0 		add	r3, r3, r1
 3102 0a64 0630D3E5 		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 3103 0a68 000053E3 		cmp	r3, #0
 3104 0a6c 3D00000A 		beq	.L40
 371:../proyecto.c ****             if (dates_comparator(actual_time, parking[i].endTime)) {
 3105              		.loc 1 371 0
 3106 0a70 0D205BE5 		ldrb	r2, [fp, #-13]	@ zero_extendqisi2
 3107 0a74 10119FE5 		ldr	r1, .L42
 3108 0a78 10019FE5 		ldr	r0, .L42+4
 3109 0a7c 0230A0E1 		mov	r3, r2
 3110 0a80 0332A0E1 		mov	r3, r3, asl #4
 3111 0a84 033062E0 		rsb	r3, r2, r3
 3112 0a88 033080E0 		add	r3, r0, r3
 3113 0a8c 0720D3E5 		ldrb	r2, [r3, #7]	@ zero_extendqisi2
 3114 0a90 0800D3E5 		ldrb	r0, [r3, #8]	@ zero_extendqisi2
 3115 0a94 0004A0E1 		mov	r0, r0, asl #8
 3116 0a98 022080E1 		orr	r2, r0, r2
 3117 0a9c 0900D3E5 		ldrb	r0, [r3, #9]	@ zero_extendqisi2
 3118 0aa0 0008A0E1 		mov	r0, r0, asl #16
 3119 0aa4 022080E1 		orr	r2, r0, r2
 3120 0aa8 0A00D3E5 		ldrb	r0, [r3, #10]	@ zero_extendqisi2
 3121 0aac 000CA0E1 		mov	r0, r0, asl #24
 3122 0ab0 020080E1 		orr	r0, r0, r2
 3123 0ab4 0020A0E3 		mov	r2, #0
 3124 0ab8 0020A0E1 		mov	r2, r0
 3125 0abc 0B00D3E5 		ldrb	r0, [r3, #11]	@ zero_extendqisi2
 3126 0ac0 0CC0D3E5 		ldrb	ip, [r3, #12]	@ zero_extendqisi2
 3127 0ac4 0CC4A0E1 		mov	ip, ip, asl #8
 3128 0ac8 00008CE1 		orr	r0, ip, r0
 3129 0acc 0D30D3E5 		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 3130 0ad0 0338A0E1 		mov	r3, r3, asl #16
 3131 0ad4 000083E1 		orr	r0, r3, r0
 3132 0ad8 0030A0E3 		mov	r3, #0
 3133 0adc FF04C0E3 		bic	r0, r0, #-16777216
 3134 0ae0 FF3403E2 		and	r3, r3, #-16777216
 3135 0ae4 033080E1 		orr	r3, r0, r3
 3136 0ae8 030091E8 		ldmia	r1, {r0, r1}
 3137 0aec FEFFFFEB 		bl	dates_comparator
 3138 0af0 0030A0E1 		mov	r3, r0
 3139 0af4 000053E3 		cmp	r3, #0
 3140 0af8 1A00000A 		beq	.L40
 372:../proyecto.c ****                 parking[i].occupied = FALSE;  // Marca como libre
 3141              		.loc 1 372 0
 3142 0afc 0D205BE5 		ldrb	r2, [fp, #-13]	@ zero_extendqisi2
 3143 0b00 88009FE5 		ldr	r0, .L42+4
 3144 0b04 0810A0E3 		mov	r1, #8
 3145 0b08 0230A0E1 		mov	r3, r2
 3146 0b0c 0332A0E1 		mov	r3, r3, asl #4
 3147 0b10 033062E0 		rsb	r3, r2, r3
 3148 0b14 033080E0 		add	r3, r0, r3
 3149 0b18 013083E0 		add	r3, r3, r1
 3150 0b1c 0020A0E3 		mov	r2, #0
 3151 0b20 0620C3E5 		strb	r2, [r3, #6]
 373:../proyecto.c ****                 reset_rtc_time(&parking[i].startTime);//Reseteamos inicio y final de plaza
 3152              		.loc 1 373 0
 3153 0b24 0D205BE5 		ldrb	r2, [fp, #-13]	@ zero_extendqisi2
 3154 0b28 0230A0E1 		mov	r3, r2
 3155 0b2c 0332A0E1 		mov	r3, r3, asl #4
 3156 0b30 033062E0 		rsb	r3, r2, r3
 3157 0b34 54209FE5 		ldr	r2, .L42+4
 3158 0b38 023083E0 		add	r3, r3, r2
 3159 0b3c 0300A0E1 		mov	r0, r3
 3160 0b40 FEFFFFEB 		bl	reset_rtc_time
 374:../proyecto.c ****                 reset_rtc_time(&parking[i].endTime);
 3161              		.loc 1 374 0
 3162 0b44 0D205BE5 		ldrb	r2, [fp, #-13]	@ zero_extendqisi2
 3163 0b48 0230A0E1 		mov	r3, r2
 3164 0b4c 0332A0E1 		mov	r3, r3, asl #4
 3165 0b50 033062E0 		rsb	r3, r2, r3
 3166 0b54 34209FE5 		ldr	r2, .L42+4
 3167 0b58 023083E0 		add	r3, r3, r2
 3168 0b5c 073083E2 		add	r3, r3, #7
 3169 0b60 0300A0E1 		mov	r0, r3
 3170 0b64 FEFFFFEB 		bl	reset_rtc_time
 3171              	.L40:
 369:../proyecto.c ****     for (i=0; i < MAXPLACES; i++) {
 3172              		.loc 1 369 0
 3173 0b68 0D305BE5 		ldrb	r3, [fp, #-13]
 3174 0b6c 013083E2 		add	r3, r3, #1
 3175 0b70 0D304BE5 		strb	r3, [fp, #-13]
 3176              	.L39:
 369:../proyecto.c ****     for (i=0; i < MAXPLACES; i++) {
 3177              		.loc 1 369 0 is_stmt 0 discriminator 1
 3178 0b74 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 3179 0b78 070053E3 		cmp	r3, #7
 3180 0b7c B0FFFF9A 		bls	.L41
 375:../proyecto.c ****             }
 376:../proyecto.c ****         }
 377:../proyecto.c ****     }
 378:../proyecto.c **** }
 3181              		.loc 1 378 0 is_stmt 1
 3182 0b80 0CD04BE2 		sub	sp, fp, #12
 3183 0b84 00689DE8 		ldmfd	sp, {fp, sp, lr}
 3184 0b88 1EFF2FE1 		bx	lr
 3185              	.L43:
 3186              		.align	2
 3187              	.L42:
 3188 0b8c 00000000 		.word	actual_time
 3189 0b90 00000000 		.word	parking
 3190              		.cfi_endproc
 3191              	.LFE3:
 3193              		.align	2
 3194              		.global	tsScanTask
 3196              	tsScanTask:
 3197              	.LFB4:
 379:../proyecto.c **** 
 380:../proyecto.c **** /*
 381:../proyecto.c **** ** Cada 50 ms muestrea la touchscreen y envia un mensaje a la tarea principal con la posicion del l
 382:../proyecto.c **** */
 383:../proyecto.c **** void tsScanTask(void)//Revisado
 384:../proyecto.c **** {
 3198              		.loc 1 384 0
 3199              		.cfi_startproc
 3200              		@ Function supports interworking.
 3201              		@ args = 0, pretend = 0, frame = 8
 3202              		@ frame_needed = 1, uses_anonymous_args = 0
 3203 0b94 0DC0A0E1 		mov	ip, sp
 3204              	.LCFI8:
 3205              		.cfi_def_cfa_register 12
 3206 0b98 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 3207 0b9c 04B04CE2 		sub	fp, ip, #4
 3208              		.cfi_offset 14, -8
 3209              		.cfi_offset 13, -12
 3210              		.cfi_offset 11, -16
 3211              	.LCFI9:
 3212              		.cfi_def_cfa 11, 4
 3213 0ba0 08D04DE2 		sub	sp, sp, #8
 385:../proyecto.c ****     static boolean init = TRUE;
 386:../proyecto.c ****     static enum { wait_keydown, scan, wait_keyup } state;
 387:../proyecto.c ****     uint16 x, y;
 388:../proyecto.c ****     if (init)
 3214              		.loc 1 388 0
 3215 0ba4 E4309FE5 		ldr	r3, .L54
 3216 0ba8 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3217 0bac 000053E3 		cmp	r3, #0
 3218 0bb0 0600000A 		beq	.L45
 389:../proyecto.c ****     {
 390:../proyecto.c ****         init = FALSE;
 3219              		.loc 1 390 0
 3220 0bb4 D4309FE5 		ldr	r3, .L54
 3221 0bb8 0020A0E3 		mov	r2, #0
 3222 0bbc 0020C3E5 		strb	r2, [r3, #0]
 391:../proyecto.c ****         state = wait_keydown;
 3223              		.loc 1 391 0
 3224 0bc0 CC309FE5 		ldr	r3, .L54+4
 3225 0bc4 0020A0E3 		mov	r2, #0
 3226 0bc8 0020C3E5 		strb	r2, [r3, #0]
 3227 0bcc 2C0000EA 		b	.L44
 3228              	.L45:
 392:../proyecto.c ****     }
 393:../proyecto.c ****     else switch (state)
 3229              		.loc 1 393 0
 3230 0bd0 BC309FE5 		ldr	r3, .L54+4
 3231 0bd4 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3232 0bd8 010053E3 		cmp	r3, #1
 3233 0bdc 0B00000A 		beq	.L48
 3234 0be0 020053E3 		cmp	r3, #2
 3235 0be4 1B00000A 		beq	.L49
 3236 0be8 000053E3 		cmp	r3, #0
 3237 0bec 2400001A 		bne	.L44
 3238              	.L47:
 394:../proyecto.c ****     {
 395:../proyecto.c **** 		case wait_keydown:                        /* Estado esperando la presion de la pantalla */
 396:../proyecto.c **** 			if (ts_pressed())                        /* Chequea la pantalla esta presionada */
 3239              		.loc 1 396 0
 3240 0bf0 FEFFFFEB 		bl	ts_pressed
 3241 0bf4 0030A0E1 		mov	r3, r0
 3242 0bf8 000053E3 		cmp	r3, #0
 3243 0bfc 1D00000A 		beq	.L52
 397:../proyecto.c **** 				state = scan;                         /* Salta al estado scan */
 3244              		.loc 1 397 0
 3245 0c00 8C309FE5 		ldr	r3, .L54+4
 3246 0c04 0120A0E3 		mov	r2, #1
 3247 0c08 0020C3E5 		strb	r2, [r3, #0]
 398:../proyecto.c **** 			break;
 3248              		.loc 1 398 0
 3249 0c0c 1C0000EA 		b	.L44
 3250              	.L48:
 399:../proyecto.c **** 		case scan:
 400:../proyecto.c **** 			ts_getpos(&x, &y);   //Aqui tenia que recibir punteros      /* Estado en que escanea la pantalla
 3251              		.loc 1 400 0
 3252 0c10 0E204BE2 		sub	r2, fp, #14
 3253 0c14 10304BE2 		sub	r3, fp, #16
 3254 0c18 0200A0E1 		mov	r0, r2
 3255 0c1c 0310A0E1 		mov	r1, r3
 3256 0c20 FEFFFFEB 		bl	ts_getpos
 401:../proyecto.c **** 			tsPressedMsg.x = x;             /* Obtiene la posicion X */
 3257              		.loc 1 401 0
 3258 0c24 BE205BE1 		ldrh	r2, [fp, #-14]
 3259 0c28 68309FE5 		ldr	r3, .L54+8
 3260 0c2c B220C3E1 		strh	r2, [r3, #2]	@ movhi
 402:../proyecto.c **** 			tsPressedMsg.y = y;             /* Obtiene la posicion Y */
 3261              		.loc 1 402 0
 3262 0c30 B0215BE1 		ldrh	r2, [fp, #-16]
 3263 0c34 5C309FE5 		ldr	r3, .L54+8
 3264 0c38 B420C3E1 		strh	r2, [r3, #4]	@ movhi
 403:../proyecto.c **** 			tsPressedMsg.flag = TRUE;                /* Marca el mensaje como valido */
 3265              		.loc 1 403 0
 3266 0c3c 54309FE5 		ldr	r3, .L54+8
 3267 0c40 0120A0E3 		mov	r2, #1
 3268 0c44 0020C3E5 		strb	r2, [r3, #0]
 404:../proyecto.c **** 			state = wait_keyup;                      /* Cambia al estado wait_keyup */
 3269              		.loc 1 404 0
 3270 0c48 44309FE5 		ldr	r3, .L54+4
 3271 0c4c 0220A0E3 		mov	r2, #2
 3272 0c50 0020C3E5 		strb	r2, [r3, #0]
 405:../proyecto.c **** 			break;
 3273              		.loc 1 405 0
 3274 0c54 0A0000EA 		b	.L44
 3275              	.L49:
 406:../proyecto.c **** 		case wait_keyup:                           /* Estado esperando que se deje de presionar la pantal
 407:../proyecto.c **** 			if (!ts_pressed())                     /* Chequea que la pantalla ya no esta presionada */
 3276              		.loc 1 407 0
 3277 0c58 FEFFFFEB 		bl	ts_pressed
 3278 0c5c 0030A0E1 		mov	r3, r0
 3279 0c60 000053E3 		cmp	r3, #0
 3280 0c64 0500001A 		bne	.L53
 408:../proyecto.c **** 				state = wait_keydown;                /* Vuelve al estado inicial */
 3281              		.loc 1 408 0
 3282 0c68 24309FE5 		ldr	r3, .L54+4
 3283 0c6c 0020A0E3 		mov	r2, #0
 3284 0c70 0020C3E5 		strb	r2, [r3, #0]
 409:../proyecto.c **** 			break;
 3285              		.loc 1 409 0
 3286 0c74 020000EA 		b	.L44
 3287              	.L52:
 398:../proyecto.c **** 			break;
 3288              		.loc 1 398 0
 3289 0c78 0000A0E1 		mov	r0, r0	@ nop
 3290 0c7c 000000EA 		b	.L44
 3291              	.L53:
 3292              		.loc 1 409 0
 3293 0c80 0000A0E1 		mov	r0, r0	@ nop
 3294              	.L44:
 410:../proyecto.c ****     }
 411:../proyecto.c **** }
 3295              		.loc 1 411 0
 3296 0c84 0CD04BE2 		sub	sp, fp, #12
 3297 0c88 00689DE8 		ldmfd	sp, {fp, sp, lr}
 3298 0c8c 1EFF2FE1 		bx	lr
 3299              	.L55:
 3300              		.align	2
 3301              	.L54:
 3302 0c90 02000000 		.word	init.4260
 3303 0c94 09000000 		.word	state.4265
 3304 0c98 00000000 		.word	tsPressedMsg
 3305              		.cfi_endproc
 3306              	.LFE4:
 3308              		.align	2
 3309              		.global	coinsAcceptorTask
 3311              	coinsAcceptorTask:
 3312              	.LFB5:
 412:../proyecto.c **** 
 413:../proyecto.c **** /*
 414:../proyecto.c **** ** Emula el comportamiento de un reconocedor de monedas:
 415:../proyecto.c **** **   Cada 50 ms muestrea el keypad y envia un mensaje a la tarea principal con el valor de la moned
 416:../proyecto.c **** */
 417:../proyecto.c **** void coinsAcceptorTask(void) {//Revisado
 3313              		.loc 1 417 0
 3314              		.cfi_startproc
 3315              		@ Function supports interworking.
 3316              		@ args = 0, pretend = 0, frame = 0
 3317              		@ frame_needed = 1, uses_anonymous_args = 0
 3318 0c9c 0DC0A0E1 		mov	ip, sp
 3319              	.LCFI10:
 3320              		.cfi_def_cfa_register 12
 3321 0ca0 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 3322 0ca4 04B04CE2 		sub	fp, ip, #4
 3323              		.cfi_offset 14, -8
 3324              		.cfi_offset 13, -12
 3325              		.cfi_offset 11, -16
 3326              	.LCFI11:
 3327              		.cfi_def_cfa 11, 4
 418:../proyecto.c ****     static boolean init = TRUE;
 419:../proyecto.c ****     static enum { wait_keydown, scan, wait_keyup } state;
 420:../proyecto.c **** 
 421:../proyecto.c ****     if (init)
 3328              		.loc 1 421 0
 3329 0ca8 44319FE5 		ldr	r3, .L72
 3330 0cac 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3331 0cb0 000053E3 		cmp	r3, #0
 3332 0cb4 0600000A 		beq	.L57
 422:../proyecto.c ****     {
 423:../proyecto.c ****         init = FALSE;
 3333              		.loc 1 423 0
 3334 0cb8 34319FE5 		ldr	r3, .L72
 3335 0cbc 0020A0E3 		mov	r2, #0
 3336 0cc0 0020C3E5 		strb	r2, [r3, #0]
 424:../proyecto.c ****         state = wait_keydown;
 3337              		.loc 1 424 0
 3338 0cc4 2C319FE5 		ldr	r3, .L72+4
 3339 0cc8 0020A0E3 		mov	r2, #0
 3340 0ccc 0020C3E5 		strb	r2, [r3, #0]
 3341 0cd0 440000EA 		b	.L56
 3342              	.L57:
 425:../proyecto.c ****     }
 426:../proyecto.c ****     else switch (state)
 3343              		.loc 1 426 0
 3344 0cd4 1C319FE5 		ldr	r3, .L72+4
 3345 0cd8 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3346 0cdc 010053E3 		cmp	r3, #1
 3347 0ce0 0B00000A 		beq	.L60
 3348 0ce4 020053E3 		cmp	r3, #2
 3349 0ce8 3300000A 		beq	.L61
 3350 0cec 000053E3 		cmp	r3, #0
 3351 0cf0 3C00001A 		bne	.L56
 3352              	.L59:
 427:../proyecto.c ****     {
 428:../proyecto.c ****     case wait_keydown:                        /* Estado esperando la presion teclas */
 429:../proyecto.c ****         if (keypad_pressed())                    /* Chequea si hay una tecla presionada */
 3353              		.loc 1 429 0
 3354 0cf4 FEFFFFEB 		bl	keypad_pressed
 3355 0cf8 0030A0E1 		mov	r3, r0
 3356 0cfc 000053E3 		cmp	r3, #0
 3357 0d00 3500000A 		beq	.L70
 430:../proyecto.c ****             state = scan;                         /* Salta al estado scan */
 3358              		.loc 1 430 0
 3359 0d04 EC309FE5 		ldr	r3, .L72+4
 3360 0d08 0120A0E3 		mov	r2, #1
 3361 0d0c 0020C3E5 		strb	r2, [r3, #0]
 431:../proyecto.c ****         break;
 3362              		.loc 1 431 0
 3363 0d10 340000EA 		b	.L56
 3364              	.L60:
 432:../proyecto.c ****     case scan:                                /* Estado en que escanea el teclado */
 433:../proyecto.c ****         switch (keypad_scan())                   /* Lee el teclado */
 3365              		.loc 1 433 0
 3366 0d14 FEFFFFEB 		bl	keypad_scan
 3367 0d18 0030A0E1 		mov	r3, r0
 3368 0d1c 0C3043E2 		sub	r3, r3, #12
 3369 0d20 030053E3 		cmp	r3, #3
 3370 0d24 03F19F97 		ldrls	pc, [pc, r3, asl #2]
 3371 0d28 1F0000EA 		b	.L63
 3372              	.L68:
 3373 0d2c 900D0000 		.word	.L64
 3374 0d30 740D0000 		.word	.L65
 3375 0d34 580D0000 		.word	.L66
 3376 0d38 3C0D0000 		.word	.L67
 3377              	.L67:
 434:../proyecto.c ****         {
 435:../proyecto.c ****         case KEYPAD_KEYF:                         /* La tecla F esta asociada a la moneda de 0,10 e
 436:../proyecto.c ****             coinAcceptorMsg.cents = 10;           /* Envia un mensaje con el valor de la moneda */
 3378              		.loc 1 436 0
 3379 0d3c B8309FE5 		ldr	r3, .L72+8
 3380 0d40 0A20A0E3 		mov	r2, #10
 3381 0d44 0120C3E5 		strb	r2, [r3, #1]
 437:../proyecto.c ****             coinAcceptorMsg.flag = TRUE;
 3382              		.loc 1 437 0
 3383 0d48 AC309FE5 		ldr	r3, .L72+8
 3384 0d4c 0120A0E3 		mov	r2, #1
 3385 0d50 0020C3E5 		strb	r2, [r3, #0]
 438:../proyecto.c ****             break;
 3386              		.loc 1 438 0
 3387 0d54 140000EA 		b	.L63
 3388              	.L66:
 439:../proyecto.c ****         case KEYPAD_KEYE:                         /* La tecla E esta asociada a la moneda de 0,20 e
 440:../proyecto.c ****             coinAcceptorMsg.cents = 20;           /* Envia un mensaje con el valor de la moneda */
 3389              		.loc 1 440 0
 3390 0d58 9C309FE5 		ldr	r3, .L72+8
 3391 0d5c 1420A0E3 		mov	r2, #20
 3392 0d60 0120C3E5 		strb	r2, [r3, #1]
 441:../proyecto.c ****             coinAcceptorMsg.flag = TRUE;
 3393              		.loc 1 441 0
 3394 0d64 90309FE5 		ldr	r3, .L72+8
 3395 0d68 0120A0E3 		mov	r2, #1
 3396 0d6c 0020C3E5 		strb	r2, [r3, #0]
 442:../proyecto.c ****             break;
 3397              		.loc 1 442 0
 3398 0d70 0D0000EA 		b	.L63
 3399              	.L65:
 443:../proyecto.c ****         case KEYPAD_KEYD:                         /* La tecla D esta asociada a la moneda de 0,50 e
 444:../proyecto.c ****             coinAcceptorMsg.cents = 50;           /* Envia un mensaje con el valor de la moneda */
 3400              		.loc 1 444 0
 3401 0d74 80309FE5 		ldr	r3, .L72+8
 3402 0d78 3220A0E3 		mov	r2, #50
 3403 0d7c 0120C3E5 		strb	r2, [r3, #1]
 445:../proyecto.c ****             coinAcceptorMsg.flag = TRUE;
 3404              		.loc 1 445 0
 3405 0d80 74309FE5 		ldr	r3, .L72+8
 3406 0d84 0120A0E3 		mov	r2, #1
 3407 0d88 0020C3E5 		strb	r2, [r3, #0]
 446:../proyecto.c ****             break;
 3408              		.loc 1 446 0
 3409 0d8c 060000EA 		b	.L63
 3410              	.L64:
 447:../proyecto.c ****         case KEYPAD_KEYC:                         /* La tecla C esta asociada a la moneda de 1,00 e
 448:../proyecto.c ****             coinAcceptorMsg.cents = 100;           /* Envia un mensaje con el valor de la moneda */
 3411              		.loc 1 448 0
 3412 0d90 64309FE5 		ldr	r3, .L72+8
 3413 0d94 6420A0E3 		mov	r2, #100
 3414 0d98 0120C3E5 		strb	r2, [r3, #1]
 449:../proyecto.c ****             coinAcceptorMsg.flag = TRUE;
 3415              		.loc 1 449 0
 3416 0d9c 58309FE5 		ldr	r3, .L72+8
 3417 0da0 0120A0E3 		mov	r2, #1
 3418 0da4 0020C3E5 		strb	r2, [r3, #0]
 450:../proyecto.c ****             break;
 3419              		.loc 1 450 0
 3420 0da8 0000A0E1 		mov	r0, r0	@ nop
 3421              	.L63:
 451:../proyecto.c ****         }
 452:../proyecto.c ****         state = wait_keyup;                       /* Salta al estado wait_keyup */
 3422              		.loc 1 452 0
 3423 0dac 44309FE5 		ldr	r3, .L72+4
 3424 0db0 0220A0E3 		mov	r2, #2
 3425 0db4 0020C3E5 		strb	r2, [r3, #0]
 453:../proyecto.c ****         break;
 3426              		.loc 1 453 0
 3427 0db8 0A0000EA 		b	.L56
 3428              	.L61:
 454:../proyecto.c ****     case wait_keyup:                          /* Estado esperando la depresion de teclas  */
 455:../proyecto.c ****         if (!keypad_pressed())                   /* Chequea si la tecla ya no esta presionada */
 3429              		.loc 1 455 0
 3430 0dbc FEFFFFEB 		bl	keypad_pressed
 3431 0dc0 0030A0E1 		mov	r3, r0
 3432 0dc4 000053E3 		cmp	r3, #0
 3433 0dc8 0500001A 		bne	.L71
 456:../proyecto.c ****             state = wait_keydown;                     /* Salta al estado wait_keydown */
 3434              		.loc 1 456 0
 3435 0dcc 24309FE5 		ldr	r3, .L72+4
 3436 0dd0 0020A0E3 		mov	r2, #0
 3437 0dd4 0020C3E5 		strb	r2, [r3, #0]
 457:../proyecto.c ****         break;
 3438              		.loc 1 457 0
 3439 0dd8 020000EA 		b	.L56
 3440              	.L70:
 431:../proyecto.c ****         break;
 3441              		.loc 1 431 0
 3442 0ddc 0000A0E1 		mov	r0, r0	@ nop
 3443 0de0 000000EA 		b	.L56
 3444              	.L71:
 3445              		.loc 1 457 0
 3446 0de4 0000A0E1 		mov	r0, r0	@ nop
 3447              	.L56:
 458:../proyecto.c ****     }
 459:../proyecto.c **** }
 3448              		.loc 1 459 0
 3449 0de8 0CD04BE2 		sub	sp, fp, #12
 3450 0dec 00689DE8 		ldmfd	sp, {fp, sp, lr}
 3451 0df0 1EFF2FE1 		bx	lr
 3452              	.L73:
 3453              		.align	2
 3454              	.L72:
 3455 0df4 01000000 		.word	init.4275
 3456 0df8 08000000 		.word	state.4280
 3457 0dfc 00000000 		.word	coinAcceptorMsg
 3458              		.cfi_endproc
 3459              	.LFE5:
 3461              		.align	2
 3462              		.global	coinsMoverTask
 3464              	coinsMoverTask:
 3465              	.LFB6:
 460:../proyecto.c **** 
 461:../proyecto.c **** /*
 462:../proyecto.c **** ** Emula el comportamiento del dispositivo que envia las monedas a la alcancia o al cajetin de devo
 463:../proyecto.c **** **   Cada 100 ms muestrea si ha recibido un mensaje de la tarea principal para mover monedas
 464:../proyecto.c **** **   Si van a la alcancia activa durante 1 s los leds y muestra una A en los segs
 465:../proyecto.c **** **   Si van al cajetin de devolucion activa durante 1 segundo los leds y muestra una D en los segs
 466:../proyecto.c **** */
 467:../proyecto.c **** void coinsMoverTask(void)// Revisado
 468:../proyecto.c **** {
 3466              		.loc 1 468 0
 3467              		.cfi_startproc
 3468              		@ Function supports interworking.
 3469              		@ args = 0, pretend = 0, frame = 0
 3470              		@ frame_needed = 1, uses_anonymous_args = 0
 3471 0e00 0DC0A0E1 		mov	ip, sp
 3472              	.LCFI12:
 3473              		.cfi_def_cfa_register 12
 3474 0e04 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 3475 0e08 04B04CE2 		sub	fp, ip, #4
 3476              		.cfi_offset 14, -8
 3477              		.cfi_offset 13, -12
 3478              		.cfi_offset 11, -16
 3479              	.LCFI13:
 3480              		.cfi_def_cfa 11, 4
 469:../proyecto.c ****     static boolean init = TRUE;
 470:../proyecto.c ****     static enum { off, on } state;
 471:../proyecto.c ****     static uint32 ticks;
 472:../proyecto.c **** 
 473:../proyecto.c ****     if (init)
 3481              		.loc 1 473 0
 3482 0e0c 0C319FE5 		ldr	r3, .L85
 3483 0e10 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3484 0e14 000053E3 		cmp	r3, #0
 3485 0e18 0600000A 		beq	.L75
 474:../proyecto.c ****     {
 475:../proyecto.c ****         init = FALSE;
 3486              		.loc 1 475 0
 3487 0e1c FC309FE5 		ldr	r3, .L85
 3488 0e20 0020A0E3 		mov	r2, #0
 3489 0e24 0020C3E5 		strb	r2, [r3, #0]
 476:../proyecto.c ****         state = off;
 3490              		.loc 1 476 0
 3491 0e28 F4309FE5 		ldr	r3, .L85+4
 3492 0e2c 0020A0E3 		mov	r2, #0
 3493 0e30 0020C3E5 		strb	r2, [r3, #0]
 3494 0e34 360000EA 		b	.L74
 3495              	.L75:
 477:../proyecto.c ****     }
 478:../proyecto.c ****     else switch (state)
 3496              		.loc 1 478 0
 3497 0e38 E4309FE5 		ldr	r3, .L85+4
 3498 0e3c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3499 0e40 000053E3 		cmp	r3, #0
 3500 0e44 0200000A 		beq	.L77
 3501 0e48 010053E3 		cmp	r3, #1
 3502 0e4c 1B00000A 		beq	.L78
 3503 0e50 2F0000EA 		b	.L74
 3504              	.L77:
 479:../proyecto.c ****     {
 480:../proyecto.c ****     case off:                                /* Estado con leds y 7-segs apagados */
 481:../proyecto.c ****         if (coinsMoverMsg.flag)                /* Chequea si ha recibido mensaje */
 3505              		.loc 1 481 0
 3506 0e54 CC309FE5 		ldr	r3, .L85+8
 3507 0e58 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3508 0e5c 000053E3 		cmp	r3, #0
 3509 0e60 2800000A 		beq	.L83
 482:../proyecto.c ****         {
 483:../proyecto.c ****             coinsMoverMsg.flag = FALSE;            /* Marca el mensaje como leido */
 3510              		.loc 1 483 0
 3511 0e64 BC309FE5 		ldr	r3, .L85+8
 3512 0e68 0020A0E3 		mov	r2, #0
 3513 0e6c 0020C3E5 		strb	r2, [r3, #0]
 484:../proyecto.c ****             if (coinsMoverMsg.accept)             /* Muestra el mensaje que corresponda en segs */
 3514              		.loc 1 484 0
 3515 0e70 B0309FE5 		ldr	r3, .L85+8
 3516 0e74 0130D3E5 		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3517 0e78 000053E3 		cmp	r3, #0
 3518 0e7c 0200000A 		beq	.L80
 485:../proyecto.c ****                 segs_putchar(0xA);
 3519              		.loc 1 485 0
 3520 0e80 0A00A0E3 		mov	r0, #10
 3521 0e84 FEFFFFEB 		bl	segs_putchar
 3522 0e88 010000EA 		b	.L81
 3523              	.L80:
 486:../proyecto.c ****             else
 487:../proyecto.c ****                 segs_putchar(0xD);
 3524              		.loc 1 487 0
 3525 0e8c 0D00A0E3 		mov	r0, #13
 3526 0e90 FEFFFFEB 		bl	segs_putchar
 3527              	.L81:
 488:../proyecto.c ****             led_on(LEFT_LED);                    /* Enciende leds */
 3528              		.loc 1 488 0
 3529 0e94 0100A0E3 		mov	r0, #1
 3530 0e98 FEFFFFEB 		bl	led_on
 489:../proyecto.c ****             led_on(RIGHT_LED);
 3531              		.loc 1 489 0
 3532 0e9c 0200A0E3 		mov	r0, #2
 3533 0ea0 FEFFFFEB 		bl	led_on
 490:../proyecto.c ****             state = on;                            /* Salta al estado on ... */
 3534              		.loc 1 490 0
 3535 0ea4 78309FE5 		ldr	r3, .L85+4
 3536 0ea8 0120A0E3 		mov	r2, #1
 3537 0eac 0020C3E5 		strb	r2, [r3, #0]
 491:../proyecto.c ****             ticks = 10;                            /* ... en el que debera permanecer 10 ticks */
 3538              		.loc 1 491 0
 3539 0eb0 74309FE5 		ldr	r3, .L85+12
 3540 0eb4 0A20A0E3 		mov	r2, #10
 3541 0eb8 002083E5 		str	r2, [r3, #0]
 492:../proyecto.c ****         }
 493:../proyecto.c ****         break;
 3542              		.loc 1 493 0
 3543 0ebc 140000EA 		b	.L74
 3544              	.L78:
 494:../proyecto.c ****     case on:                                /* Estado con leds y 7-segs encendidos */
 495:../proyecto.c ****         if (!(--ticks))                        /* Decrementa ticks y chequea si ha permanecido en e
 3545              		.loc 1 495 0
 3546 0ec0 64309FE5 		ldr	r3, .L85+12
 3547 0ec4 003093E5 		ldr	r3, [r3, #0]
 3548 0ec8 012043E2 		sub	r2, r3, #1
 3549 0ecc 58309FE5 		ldr	r3, .L85+12
 3550 0ed0 002083E5 		str	r2, [r3, #0]
 3551 0ed4 50309FE5 		ldr	r3, .L85+12
 3552 0ed8 003093E5 		ldr	r3, [r3, #0]
 3553 0edc 000053E3 		cmp	r3, #0
 3554 0ee0 0A00001A 		bne	.L84
 496:../proyecto.c ****         {
 497:../proyecto.c ****             segs_off();                            /* Apaga segs */
 3555              		.loc 1 497 0
 3556 0ee4 FEFFFFEB 		bl	segs_off
 498:../proyecto.c ****             led_off(LEFT_LED);                   /* Apaga leds */
 3557              		.loc 1 498 0
 3558 0ee8 0100A0E3 		mov	r0, #1
 3559 0eec FEFFFFEB 		bl	led_off
 499:../proyecto.c ****             led_off(RIGHT_LED);
 3560              		.loc 1 499 0
 3561 0ef0 0200A0E3 		mov	r0, #2
 3562 0ef4 FEFFFFEB 		bl	led_off
 500:../proyecto.c ****             state = off;                           /* Salta al estado off */
 3563              		.loc 1 500 0
 3564 0ef8 24309FE5 		ldr	r3, .L85+4
 3565 0efc 0020A0E3 		mov	r2, #0
 3566 0f00 0020C3E5 		strb	r2, [r3, #0]
 501:../proyecto.c ****         }
 502:../proyecto.c ****         break;
 3567              		.loc 1 502 0
 3568 0f04 020000EA 		b	.L74
 3569              	.L83:
 493:../proyecto.c ****         break;
 3570              		.loc 1 493 0
 3571 0f08 0000A0E1 		mov	r0, r0	@ nop
 3572 0f0c 000000EA 		b	.L74
 3573              	.L84:
 3574              		.loc 1 502 0
 3575 0f10 0000A0E1 		mov	r0, r0	@ nop
 3576              	.L74:
 503:../proyecto.c ****     }
 504:../proyecto.c **** }
 3577              		.loc 1 504 0
 3578 0f14 0CD04BE2 		sub	sp, fp, #12
 3579 0f18 00689DE8 		ldmfd	sp, {fp, sp, lr}
 3580 0f1c 1EFF2FE1 		bx	lr
 3581              	.L86:
 3582              		.align	2
 3583              	.L85:
 3584 0f20 00000000 		.word	init.4293
 3585 0f24 00000000 		.word	state.4297
 3586 0f28 00000000 		.word	coinsMoverMsg
 3587 0f2c 04000000 		.word	ticks.4298
 3588              		.cfi_endproc
 3589              	.LFE6:
 3591              		.section	.rodata
 3592 0085 000000   		.align	2
 3593              	.LC7:
 3594 0088 0A496E74 		.ascii	"\012Introduzca nueva fecha\012\000"
 3594      726F6475 
 3594      7A636120 
 3594      6E756576 
 3594      61206665 
 3595 00a1 000000   		.align	2
 3596              	.LC8:
 3597 00a4 20202D20 		.ascii	"  - Dia: \000"
 3597      4469613A 
 3597      2000
 3598 00ae 0000     		.align	2
 3599              	.LC9:
 3600 00b0 20202D20 		.ascii	"  - Dia de la semana (Del 1 al 7, 1 es domingo): \000"
 3600      44696120 
 3600      6465206C 
 3600      61207365 
 3600      6D616E61 
 3601 00e2 0000     		.align	2
 3602              	.LC10:
 3603 00e4 20202D20 		.ascii	"  - Mes: \000"
 3603      4D65733A 
 3603      2000
 3604 00ee 0000     		.align	2
 3605              	.LC11:
 3606 00f0 20202D20 		.ascii	"  - A\361o (2 digitos): \000"
 3606      41F16F20 
 3606      28322064 
 3606      69676974 
 3606      6F73293A 
 3607 0106 0000     		.align	2
 3608              	.LC12:
 3609 0108 496E7472 		.ascii	"Introduzca nueva hora\012\000"
 3609      6F64757A 
 3609      6361206E 
 3609      75657661 
 3609      20686F72 
 3610 011f 00       		.align	2
 3611              	.LC13:
 3612 0120 20202D20 		.ascii	"  - Hora: \000"
 3612      486F7261 
 3612      3A2000
 3613 012b 00       		.align	2
 3614              	.LC14:
 3615 012c 20202D20 		.ascii	"  - Minuto: \000"
 3615      4D696E75 
 3615      746F3A20 
 3615      00
 3616 0139 000000   		.align	2
 3617              	.LC15:
 3618 013c 20202D20 		.ascii	"  - Segundo: \000"
 3618      53656775 
 3618      6E646F3A 
 3618      2000
 3619              		.text
 3620              		.align	2
 3621              		.global	setup
 3623              	setup:
 3624              	.LFB7:
 505:../proyecto.c **** 
 506:../proyecto.c **** /*******************************************************************/
 507:../proyecto.c **** 
 508:../proyecto.c **** void setup(void)//Revisado
 509:../proyecto.c **** {
 3625              		.loc 1 509 0
 3626              		.cfi_startproc
 3627              		@ Function supports interworking.
 3628              		@ args = 0, pretend = 0, frame = 8
 3629              		@ frame_needed = 1, uses_anonymous_args = 0
 3630 0f30 0DC0A0E1 		mov	ip, sp
 3631              	.LCFI14:
 3632              		.cfi_def_cfa_register 12
 3633 0f34 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 3634 0f38 04B04CE2 		sub	fp, ip, #4
 3635              		.cfi_offset 14, -8
 3636              		.cfi_offset 13, -12
 3637              		.cfi_offset 11, -16
 3638              	.LCFI15:
 3639              		.cfi_def_cfa 11, 4
 3640 0f3c 08D04DE2 		sub	sp, sp, #8
 510:../proyecto.c ****     // Inicialización de variables o configuraciones necesarias
 511:../proyecto.c ****     int i;
 512:../proyecto.c ****     for (i = 0; i < MAXPLACES; i++) {
 3641              		.loc 1 512 0
 3642 0f40 0030A0E3 		mov	r3, #0
 3643 0f44 10300BE5 		str	r3, [fp, #-16]
 3644 0f48 0C0000EA 		b	.L88
 3645              	.L89:
 513:../proyecto.c ****         parking[i].occupied = FALSE;
 3646              		.loc 1 513 0 discriminator 2
 3647 0f4c 20029FE5 		ldr	r0, .L97
 3648 0f50 10201BE5 		ldr	r2, [fp, #-16]
 3649 0f54 0810A0E3 		mov	r1, #8
 3650 0f58 0230A0E1 		mov	r3, r2
 3651 0f5c 0332A0E1 		mov	r3, r3, asl #4
 3652 0f60 033062E0 		rsb	r3, r2, r3
 3653 0f64 033080E0 		add	r3, r0, r3
 3654 0f68 013083E0 		add	r3, r3, r1
 3655 0f6c 0020A0E3 		mov	r2, #0
 3656 0f70 0620C3E5 		strb	r2, [r3, #6]
 512:../proyecto.c ****     for (i = 0; i < MAXPLACES; i++) {
 3657              		.loc 1 512 0 discriminator 2
 3658 0f74 10301BE5 		ldr	r3, [fp, #-16]
 3659 0f78 013083E2 		add	r3, r3, #1
 3660 0f7c 10300BE5 		str	r3, [fp, #-16]
 3661              	.L88:
 512:../proyecto.c ****     for (i = 0; i < MAXPLACES; i++) {
 3662              		.loc 1 512 0 is_stmt 0 discriminator 1
 3663 0f80 10301BE5 		ldr	r3, [fp, #-16]
 3664 0f84 070053E3 		cmp	r3, #7
 3665 0f88 EFFFFFDA 		ble	.L89
 514:../proyecto.c ****     }
 515:../proyecto.c ****     coinAcceptorMsg.flag = FALSE;
 3666              		.loc 1 515 0 is_stmt 1
 3667 0f8c E4319FE5 		ldr	r3, .L97+4
 3668 0f90 0020A0E3 		mov	r2, #0
 3669 0f94 0020C3E5 		strb	r2, [r3, #0]
 516:../proyecto.c ****     coinAcceptorMsg.cents = 0;
 3670              		.loc 1 516 0
 3671 0f98 D8319FE5 		ldr	r3, .L97+4
 3672 0f9c 0020A0E3 		mov	r2, #0
 3673 0fa0 0120C3E5 		strb	r2, [r3, #1]
 517:../proyecto.c **** 
 518:../proyecto.c ****     tsPressedMsg.flag = FALSE;
 3674              		.loc 1 518 0
 3675 0fa4 D0319FE5 		ldr	r3, .L97+8
 3676 0fa8 0020A0E3 		mov	r2, #0
 3677 0fac 0020C3E5 		strb	r2, [r3, #0]
 519:../proyecto.c ****     tsPressedMsg.x = 0;
 3678              		.loc 1 519 0
 3679 0fb0 C4319FE5 		ldr	r3, .L97+8
 3680 0fb4 0020A0E3 		mov	r2, #0
 3681 0fb8 B220C3E1 		strh	r2, [r3, #2]	@ movhi
 520:../proyecto.c ****     tsPressedMsg.y = 0;
 3682              		.loc 1 520 0
 3683 0fbc B8319FE5 		ldr	r3, .L97+8
 3684 0fc0 0020A0E3 		mov	r2, #0
 3685 0fc4 B420C3E1 		strh	r2, [r3, #4]	@ movhi
 521:../proyecto.c **** 
 522:../proyecto.c ****     coinsMoverMsg.flag = FALSE;
 3686              		.loc 1 522 0
 3687 0fc8 B0319FE5 		ldr	r3, .L97+12
 3688 0fcc 0020A0E3 		mov	r2, #0
 3689 0fd0 0020C3E5 		strb	r2, [r3, #0]
 523:../proyecto.c ****     coinsMoverMsg.accept = FALSE;
 3690              		.loc 1 523 0
 3691 0fd4 A4319FE5 		ldr	r3, .L97+12
 3692 0fd8 0020A0E3 		mov	r2, #0
 3693 0fdc 0120C3E5 		strb	r2, [r3, #1]
 524:../proyecto.c ****     printTicketFlag = FALSE;
 3694              		.loc 1 524 0
 3695 0fe0 9C319FE5 		ldr	r3, .L97+16
 3696 0fe4 0020A0E3 		mov	r2, #0
 3697 0fe8 0020C3E5 		strb	r2, [r3, #0]
 525:../proyecto.c **** 
 526:../proyecto.c ****     //Iniciamos la hora del sistema (BUCLES POR SI SE INTRODUCE FECHA ERRONEA)
 527:../proyecto.c **** 	uart0_puts( "\nIntroduzca nueva fecha\n" );
 3698              		.loc 1 527 0
 3699 0fec 94019FE5 		ldr	r0, .L97+20
 3700 0ff0 FEFFFFEB 		bl	uart0_puts
 3701              	.L90:
 528:../proyecto.c ****     do {
 529:../proyecto.c **** 		uart0_puts( "  - Dia: " );
 3702              		.loc 1 529 0 discriminator 1
 3703 0ff4 90019FE5 		ldr	r0, .L97+24
 3704 0ff8 FEFFFFEB 		bl	uart0_puts
 530:../proyecto.c **** 	    actual_time.mday = (uint8) uart0_getint();
 3705              		.loc 1 530 0 discriminator 1
 3706 0ffc FEFFFFEB 		bl	uart0_getint
 3707 1000 0030A0E1 		mov	r3, r0
 3708 1004 FF2003E2 		and	r2, r3, #255
 3709 1008 80319FE5 		ldr	r3, .L97+28
 3710 100c 0320C3E5 		strb	r2, [r3, #3]
 531:../proyecto.c **** 	} while(actual_time.mday < 1 || actual_time.mday > 31);
 3711              		.loc 1 531 0 discriminator 1
 3712 1010 78319FE5 		ldr	r3, .L97+28
 3713 1014 0330D3E5 		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 3714 1018 000053E3 		cmp	r3, #0
 3715 101c F4FFFF0A 		beq	.L90
 3716              		.loc 1 531 0 is_stmt 0 discriminator 2
 3717 1020 68319FE5 		ldr	r3, .L97+28
 3718 1024 0330D3E5 		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 3719 1028 1F0053E3 		cmp	r3, #31
 3720 102c F0FFFF8A 		bhi	.L90
 3721              	.L91:
 532:../proyecto.c **** 
 533:../proyecto.c ****     do {
 534:../proyecto.c **** 		uart0_puts( "  - Dia de la semana (Del 1 al 7, 1 es domingo): " );
 3722              		.loc 1 534 0 is_stmt 1 discriminator 1
 3723 1030 5C019FE5 		ldr	r0, .L97+32
 3724 1034 FEFFFFEB 		bl	uart0_puts
 535:../proyecto.c **** 		actual_time.wday = (uint8) uart0_getint();
 3725              		.loc 1 535 0 discriminator 1
 3726 1038 FEFFFFEB 		bl	uart0_getint
 3727 103c 0030A0E1 		mov	r3, r0
 3728 1040 FF2003E2 		and	r2, r3, #255
 3729 1044 44319FE5 		ldr	r3, .L97+28
 3730 1048 0420C3E5 		strb	r2, [r3, #4]
 536:../proyecto.c ****     } while(actual_time.wday < 1 || actual_time.wday > 7);
 3731              		.loc 1 536 0 discriminator 1
 3732 104c 3C319FE5 		ldr	r3, .L97+28
 3733 1050 0430D3E5 		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3734 1054 000053E3 		cmp	r3, #0
 3735 1058 F4FFFF0A 		beq	.L91
 3736              		.loc 1 536 0 is_stmt 0 discriminator 2
 3737 105c 2C319FE5 		ldr	r3, .L97+28
 3738 1060 0430D3E5 		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3739 1064 070053E3 		cmp	r3, #7
 3740 1068 F0FFFF8A 		bhi	.L91
 3741              	.L92:
 537:../proyecto.c **** 
 538:../proyecto.c ****     do {
 539:../proyecto.c **** 		uart0_puts( "  - Mes: " );
 3742              		.loc 1 539 0 is_stmt 1 discriminator 1
 3743 106c 24019FE5 		ldr	r0, .L97+36
 3744 1070 FEFFFFEB 		bl	uart0_puts
 540:../proyecto.c **** 		actual_time.mon = (uint8) uart0_getint();
 3745              		.loc 1 540 0 discriminator 1
 3746 1074 FEFFFFEB 		bl	uart0_getint
 3747 1078 0030A0E1 		mov	r3, r0
 3748 107c FF2003E2 		and	r2, r3, #255
 3749 1080 08319FE5 		ldr	r3, .L97+28
 3750 1084 0520C3E5 		strb	r2, [r3, #5]
 541:../proyecto.c ****     } while(actual_time.mon < 1 || actual_time.mon > 12);
 3751              		.loc 1 541 0 discriminator 1
 3752 1088 00319FE5 		ldr	r3, .L97+28
 3753 108c 0530D3E5 		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 3754 1090 000053E3 		cmp	r3, #0
 3755 1094 F4FFFF0A 		beq	.L92
 3756              		.loc 1 541 0 is_stmt 0 discriminator 2
 3757 1098 F0309FE5 		ldr	r3, .L97+28
 3758 109c 0530D3E5 		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 3759 10a0 0C0053E3 		cmp	r3, #12
 3760 10a4 F0FFFF8A 		bhi	.L92
 3761              	.L93:
 542:../proyecto.c **** 
 543:../proyecto.c ****     do {
 544:../proyecto.c ****     	uart0_puts( "  - Año (2 digitos): " );
 3762              		.loc 1 544 0 is_stmt 1 discriminator 1
 3763 10a8 EC009FE5 		ldr	r0, .L97+40
 3764 10ac FEFFFFEB 		bl	uart0_puts
 545:../proyecto.c ****         actual_time.year = (uint8) uart0_getint();
 3765              		.loc 1 545 0 discriminator 1
 3766 10b0 FEFFFFEB 		bl	uart0_getint
 3767 10b4 0030A0E1 		mov	r3, r0
 3768 10b8 FF2003E2 		and	r2, r3, #255
 3769 10bc CC309FE5 		ldr	r3, .L97+28
 3770 10c0 0620C3E5 		strb	r2, [r3, #6]
 546:../proyecto.c ****     } while(actual_time.year < 0 || actual_time.year > 99);
 3771              		.loc 1 546 0 discriminator 1
 3772 10c4 C4309FE5 		ldr	r3, .L97+28
 3773 10c8 0630D3E5 		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 3774 10cc 630053E3 		cmp	r3, #99
 3775 10d0 F4FFFF8A 		bhi	.L93
 547:../proyecto.c **** 
 548:../proyecto.c ****     uart0_puts( "Introduzca nueva hora\n" );
 3776              		.loc 1 548 0
 3777 10d4 C4009FE5 		ldr	r0, .L97+44
 3778 10d8 FEFFFFEB 		bl	uart0_puts
 3779              	.L94:
 549:../proyecto.c ****     do {
 550:../proyecto.c **** 		uart0_puts( "  - Hora: " );
 3780              		.loc 1 550 0 discriminator 1
 3781 10dc C0009FE5 		ldr	r0, .L97+48
 3782 10e0 FEFFFFEB 		bl	uart0_puts
 551:../proyecto.c **** 		actual_time.hour = (uint8) uart0_getint();
 3783              		.loc 1 551 0 discriminator 1
 3784 10e4 FEFFFFEB 		bl	uart0_getint
 3785 10e8 0030A0E1 		mov	r3, r0
 3786 10ec FF2003E2 		and	r2, r3, #255
 3787 10f0 98309FE5 		ldr	r3, .L97+28
 3788 10f4 0220C3E5 		strb	r2, [r3, #2]
 552:../proyecto.c ****     } while(actual_time.hour < 0 || actual_time.hour > 23);
 3789              		.loc 1 552 0 discriminator 1
 3790 10f8 90309FE5 		ldr	r3, .L97+28
 3791 10fc 0230D3E5 		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 3792 1100 170053E3 		cmp	r3, #23
 3793 1104 F4FFFF8A 		bhi	.L94
 3794              	.L95:
 553:../proyecto.c **** 
 554:../proyecto.c ****     do {
 555:../proyecto.c **** 		uart0_puts( "  - Minuto: " );
 3795              		.loc 1 555 0 discriminator 1
 3796 1108 98009FE5 		ldr	r0, .L97+52
 3797 110c FEFFFFEB 		bl	uart0_puts
 556:../proyecto.c **** 		actual_time.min = (uint8) uart0_getint();
 3798              		.loc 1 556 0 discriminator 1
 3799 1110 FEFFFFEB 		bl	uart0_getint
 3800 1114 0030A0E1 		mov	r3, r0
 3801 1118 FF2003E2 		and	r2, r3, #255
 3802 111c 6C309FE5 		ldr	r3, .L97+28
 3803 1120 0120C3E5 		strb	r2, [r3, #1]
 557:../proyecto.c ****     } while(actual_time.min < 0 || actual_time.min > 60);
 3804              		.loc 1 557 0 discriminator 1
 3805 1124 64309FE5 		ldr	r3, .L97+28
 3806 1128 0130D3E5 		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3807 112c 3C0053E3 		cmp	r3, #60
 3808 1130 F4FFFF8A 		bhi	.L95
 3809              	.L96:
 558:../proyecto.c **** 
 559:../proyecto.c ****     do {
 560:../proyecto.c **** 		uart0_puts( "  - Segundo: " );
 3810              		.loc 1 560 0 discriminator 1
 3811 1134 70009FE5 		ldr	r0, .L97+56
 3812 1138 FEFFFFEB 		bl	uart0_puts
 561:../proyecto.c **** 		actual_time.sec = (uint8) uart0_getint();
 3813              		.loc 1 561 0 discriminator 1
 3814 113c FEFFFFEB 		bl	uart0_getint
 3815 1140 0030A0E1 		mov	r3, r0
 3816 1144 FF2003E2 		and	r2, r3, #255
 3817 1148 40309FE5 		ldr	r3, .L97+28
 3818 114c 0020C3E5 		strb	r2, [r3, #0]
 562:../proyecto.c ****     } while(actual_time.sec < 0 || actual_time.sec > 60);
 3819              		.loc 1 562 0 discriminator 1
 3820 1150 38309FE5 		ldr	r3, .L97+28
 3821 1154 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3822 1158 3C0053E3 		cmp	r3, #60
 3823 115c F4FFFF8A 		bhi	.L96
 563:../proyecto.c **** 
 564:../proyecto.c ****     rtc_puttime( &actual_time );
 3824              		.loc 1 564 0
 3825 1160 28009FE5 		ldr	r0, .L97+28
 3826 1164 FEFFFFEB 		bl	rtc_puttime
 565:../proyecto.c **** }
 3827              		.loc 1 565 0
 3828 1168 0CD04BE2 		sub	sp, fp, #12
 3829 116c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 3830 1170 1EFF2FE1 		bx	lr
 3831              	.L98:
 3832              		.align	2
 3833              	.L97:
 3834 1174 00000000 		.word	parking
 3835 1178 00000000 		.word	coinAcceptorMsg
 3836 117c 00000000 		.word	tsPressedMsg
 3837 1180 00000000 		.word	coinsMoverMsg
 3838 1184 00000000 		.word	printTicketFlag
 3839 1188 88000000 		.word	.LC7
 3840 118c A4000000 		.word	.LC8
 3841 1190 00000000 		.word	actual_time
 3842 1194 B0000000 		.word	.LC9
 3843 1198 E4000000 		.word	.LC10
 3844 119c F0000000 		.word	.LC11
 3845 11a0 08010000 		.word	.LC12
 3846 11a4 20010000 		.word	.LC13
 3847 11a8 2C010000 		.word	.LC14
 3848 11ac 3C010000 		.word	.LC15
 3849              		.cfi_endproc
 3850              	.LFE7:
 3852              		.section	.rodata
 3853 014a 0000     		.align	2
 3854              	.LC16:
 3855 014c 50756C73 		.ascii	"Pulse la pantalla\000"
 3855      65206C61 
 3855      2070616E 
 3855      74616C6C 
 3855      6100
 3856 015e 0000     		.align	2
 3857              	.LC17:
 3858 0160 70617261 		.ascii	"para comenzar\000"
 3858      20636F6D 
 3858      656E7A61 
 3858      7200
 3859 016e 0000     		.align	2
 3860              	.LC18:
 3861 0170 484F5241 		.ascii	"HORARIO DE FUNCIONAMIENTO\000"
 3861      52494F20 
 3861      44452046 
 3861      554E4349 
 3861      4F4E414D 
 3862 018a 0000     		.align	2
 3863              	.LC19:
 3864 018c 646F6D3A 		.ascii	"dom: gratis        jue: 09:00-21:00\000"
 3864      20677261 
 3864      74697320 
 3864      20202020 
 3864      2020206A 
 3865              		.align	2
 3866              	.LC20:
 3867 01b0 6C756E3A 		.ascii	"lun: 09:00-21:00   vie: 09:00-21:00\000"
 3867      2030393A 
 3867      30302D32 
 3867      313A3030 
 3867      20202076 
 3868              		.align	2
 3869              	.LC21:
 3870 01d4 6D61723A 		.ascii	"mar: 09:00-21:00   sab: 09:00-15:00\000"
 3870      2030393A 
 3870      30302D32 
 3870      313A3030 
 3870      20202073 
 3871              		.align	2
 3872              	.LC22:
 3873 01f8 6D69653A 		.ascii	"mie: 09:00-21:00\000"
 3873      2030393A 
 3873      30302D32 
 3873      313A3030 
 3873      00
 3874              		.text
 3875              		.align	2
 3876              		.global	plotWelcomeScreen
 3878              	plotWelcomeScreen:
 3879              	.LFB8:
 566:../proyecto.c **** 
 567:../proyecto.c **** /*******************************************************************/
 568:../proyecto.c **** 
 569:../proyecto.c **** void plotWelcomeScreen(void)
 570:../proyecto.c **** {
 3880              		.loc 1 570 0
 3881              		.cfi_startproc
 3882              		@ Function supports interworking.
 3883              		@ args = 0, pretend = 0, frame = 0
 3884              		@ frame_needed = 1, uses_anonymous_args = 0
 3885 11b0 0DC0A0E1 		mov	ip, sp
 3886              	.LCFI16:
 3887              		.cfi_def_cfa_register 12
 3888 11b4 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 3889 11b8 04B04CE2 		sub	fp, ip, #4
 3890              		.cfi_offset 14, -8
 3891              		.cfi_offset 13, -12
 3892              		.cfi_offset 11, -16
 3893              	.LCFI17:
 3894              		.cfi_def_cfa 11, 4
 3895 11bc 08D04DE2 		sub	sp, sp, #8
 571:../proyecto.c ****     lcd_clear();
 3896              		.loc 1 571 0
 3897 11c0 FEFFFFEB 		bl	lcd_clear
 572:../proyecto.c ****     rtc_gettime(&actual_time);
 3898              		.loc 1 572 0
 3899 11c4 BC009FE5 		ldr	r0, .L100
 3900 11c8 FEFFFFEB 		bl	rtc_gettime
 573:../proyecto.c **** 
 574:../proyecto.c ****     // Mensaje principal centrado (16x32 por caracter)
 575:../proyecto.c ****     lcd_puts_x2(24, 40, BLACK, "Pulse la pantalla");
 3901              		.loc 1 575 0
 3902 11cc 1800A0E3 		mov	r0, #24
 3903 11d0 2810A0E3 		mov	r1, #40
 3904 11d4 0F20A0E3 		mov	r2, #15
 3905 11d8 AC309FE5 		ldr	r3, .L100+4
 3906 11dc FEFFFFEB 		bl	lcd_puts_x2
 576:../proyecto.c ****     lcd_puts_x2(72, 80, BLACK, "para comenzar");
 3907              		.loc 1 576 0
 3908 11e0 4800A0E3 		mov	r0, #72
 3909 11e4 5010A0E3 		mov	r1, #80
 3910 11e8 0F20A0E3 		mov	r2, #15
 3911 11ec 9C309FE5 		ldr	r3, .L100+8
 3912 11f0 FEFFFFEB 		bl	lcd_puts_x2
 577:../proyecto.c **** 
 578:../proyecto.c ****     // Rectángulo horario (centrado en pantalla)
 579:../proyecto.c ****     lcd_draw_box(1, 128, 319, 218, BLACK, 1);
 3913              		.loc 1 579 0
 3914 11f4 0F30A0E3 		mov	r3, #15
 3915 11f8 00308DE5 		str	r3, [sp, #0]
 3916 11fc 0130A0E3 		mov	r3, #1
 3917 1200 04308DE5 		str	r3, [sp, #4]
 3918 1204 0100A0E3 		mov	r0, #1
 3919 1208 8010A0E3 		mov	r1, #128
 3920 120c 80209FE5 		ldr	r2, .L100+12
 3921 1210 DA30A0E3 		mov	r3, #218
 3922 1214 FEFFFFEB 		bl	lcd_draw_box
 580:../proyecto.c **** 
 581:../proyecto.c ****     // Título horario centrado en rectángulo
 582:../proyecto.c ****     lcd_puts(60, 120, BLACK, "HORARIO DE FUNCIONAMIENTO");
 3923              		.loc 1 582 0
 3924 1218 3C00A0E3 		mov	r0, #60
 3925 121c 7810A0E3 		mov	r1, #120
 3926 1220 0F20A0E3 		mov	r2, #15
 3927 1224 6C309FE5 		ldr	r3, .L100+16
 3928 1228 FEFFFFEB 		bl	lcd_puts
 583:../proyecto.c **** 
 584:../proyecto.c ****     // Horarios (alineados dentro del rectángulo)
 585:../proyecto.c ****     lcd_puts(15, 144, BLACK, "dom: gratis        jue: 09:00-21:00");
 3929              		.loc 1 585 0
 3930 122c 0F00A0E3 		mov	r0, #15
 3931 1230 9010A0E3 		mov	r1, #144
 3932 1234 0F20A0E3 		mov	r2, #15
 3933 1238 5C309FE5 		ldr	r3, .L100+20
 3934 123c FEFFFFEB 		bl	lcd_puts
 586:../proyecto.c ****     lcd_puts(15, 160, BLACK, "lun: 09:00-21:00   vie: 09:00-21:00");
 3935              		.loc 1 586 0
 3936 1240 0F00A0E3 		mov	r0, #15
 3937 1244 A010A0E3 		mov	r1, #160
 3938 1248 0F20A0E3 		mov	r2, #15
 3939 124c 4C309FE5 		ldr	r3, .L100+24
 3940 1250 FEFFFFEB 		bl	lcd_puts
 587:../proyecto.c ****     lcd_puts(15, 176, BLACK, "mar: 09:00-21:00   sab: 09:00-15:00");
 3941              		.loc 1 587 0
 3942 1254 0F00A0E3 		mov	r0, #15
 3943 1258 B010A0E3 		mov	r1, #176
 3944 125c 0F20A0E3 		mov	r2, #15
 3945 1260 3C309FE5 		ldr	r3, .L100+28
 3946 1264 FEFFFFEB 		bl	lcd_puts
 588:../proyecto.c ****     lcd_puts(15, 192, BLACK, "mie: 09:00-21:00");
 3947              		.loc 1 588 0
 3948 1268 0F00A0E3 		mov	r0, #15
 3949 126c C010A0E3 		mov	r1, #192
 3950 1270 0F20A0E3 		mov	r2, #15
 3951 1274 2C309FE5 		ldr	r3, .L100+32
 3952 1278 FEFFFFEB 		bl	lcd_puts
 589:../proyecto.c **** }
 3953              		.loc 1 589 0
 3954 127c 0CD04BE2 		sub	sp, fp, #12
 3955 1280 00689DE8 		ldmfd	sp, {fp, sp, lr}
 3956 1284 1EFF2FE1 		bx	lr
 3957              	.L101:
 3958              		.align	2
 3959              	.L100:
 3960 1288 00000000 		.word	actual_time
 3961 128c 4C010000 		.word	.LC16
 3962 1290 60010000 		.word	.LC17
 3963 1294 3F010000 		.word	319
 3964 1298 70010000 		.word	.LC18
 3965 129c 8C010000 		.word	.LC19
 3966 12a0 B0010000 		.word	.LC20
 3967 12a4 D4010000 		.word	.LC21
 3968 12a8 F8010000 		.word	.LC22
 3969              		.cfi_endproc
 3970              	.LFE8:
 3972              		.align	2
 3973              		.global	drawParkingGrid
 3975              	drawParkingGrid:
 3976              	.LFB9:
 590:../proyecto.c **** 
 591:../proyecto.c **** void drawParkingGrid(void)
 592:../proyecto.c **** {
 3977              		.loc 1 592 0
 3978              		.cfi_startproc
 3979              		@ Function supports interworking.
 3980              		@ args = 0, pretend = 0, frame = 8
 3981              		@ frame_needed = 1, uses_anonymous_args = 0
 3982 12ac 0DC0A0E1 		mov	ip, sp
 3983              	.LCFI18:
 3984              		.cfi_def_cfa_register 12
 3985 12b0 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 3986 12b4 04B04CE2 		sub	fp, ip, #4
 3987              		.cfi_offset 14, -8
 3988              		.cfi_offset 13, -12
 3989              		.cfi_offset 11, -16
 3990              	.LCFI19:
 3991              		.cfi_def_cfa 11, 4
 3992 12b8 10D04DE2 		sub	sp, sp, #16
 593:../proyecto.c ****     uint16 x = 40, y = 104, i;
 3993              		.loc 1 593 0
 3994 12bc 2830A0E3 		mov	r3, #40
 3995 12c0 B2314BE1 		strh	r3, [fp, #-18]	@ movhi
 3996 12c4 6830A0E3 		mov	r3, #104
 3997 12c8 B4314BE1 		strh	r3, [fp, #-20]	@ movhi
 594:../proyecto.c ****     uint8 row, col;
 595:../proyecto.c **** 
 596:../proyecto.c ****     // Grid principal centrado en pantalla
 597:../proyecto.c ****     // Cada celda 80x60 pixels
 598:../proyecto.c ****     for(row = 0; row < 2; row++) {
 3998              		.loc 1 598 0
 3999 12cc 0030A0E3 		mov	r3, #0
 4000 12d0 0F304BE5 		strb	r3, [fp, #-15]
 4001 12d4 440000EA 		b	.L103
 4002              	.L106:
 599:../proyecto.c ****         for(col = 0; col < 4; col++) {
 4003              		.loc 1 599 0
 4004 12d8 0030A0E3 		mov	r3, #0
 4005 12dc 10304BE5 		strb	r3, [fp, #-16]
 4006 12e0 3B0000EA 		b	.L104
 4007              	.L105:
 600:../proyecto.c ****             lcd_draw_box(col*80, row*60 + y, (col+1)*80 - 1, (row+1)*60 + y - 1, BLACK, 1); //-1 en
 4008              		.loc 1 600 0 discriminator 2
 4009 12e4 10305BE5 		ldrb	r3, [fp, #-16]	@ zero_extendqisi2
 4010 12e8 0338A0E1 		mov	r3, r3, asl #16
 4011 12ec 2338A0E1 		mov	r3, r3, lsr #16
 4012 12f0 0320A0E1 		mov	r2, r3	@ movhi
 4013 12f4 0221A0E1 		mov	r2, r2, asl #2
 4014 12f8 033082E0 		add	r3, r2, r3
 4015 12fc 0332A0E1 		mov	r3, r3, asl #4
 4016 1300 0338A0E1 		mov	r3, r3, asl #16
 4017 1304 2308A0E1 		mov	r0, r3, lsr #16
 4018 1308 0F305BE5 		ldrb	r3, [fp, #-15]	@ zero_extendqisi2
 4019 130c 0338A0E1 		mov	r3, r3, asl #16
 4020 1310 2338A0E1 		mov	r3, r3, lsr #16
 4021 1314 0320A0E1 		mov	r2, r3	@ movhi
 4022 1318 0222A0E1 		mov	r2, r2, asl #4
 4023 131c 023063E0 		rsb	r3, r3, r2
 4024 1320 0331A0E1 		mov	r3, r3, asl #2
 4025 1324 0338A0E1 		mov	r3, r3, asl #16
 4026 1328 2328A0E1 		mov	r2, r3, lsr #16
 4027 132c B4315BE1 		ldrh	r3, [fp, #-20]	@ movhi
 4028 1330 033082E0 		add	r3, r2, r3
 4029 1334 0338A0E1 		mov	r3, r3, asl #16
 4030 1338 2318A0E1 		mov	r1, r3, lsr #16
 4031 133c 10305BE5 		ldrb	r3, [fp, #-16]	@ zero_extendqisi2
 4032 1340 013083E2 		add	r3, r3, #1
 4033 1344 0338A0E1 		mov	r3, r3, asl #16
 4034 1348 2338A0E1 		mov	r3, r3, lsr #16
 4035 134c 0320A0E1 		mov	r2, r3	@ movhi
 4036 1350 0221A0E1 		mov	r2, r2, asl #2
 4037 1354 033082E0 		add	r3, r2, r3
 4038 1358 0332A0E1 		mov	r3, r3, asl #4
 4039 135c 0338A0E1 		mov	r3, r3, asl #16
 4040 1360 2338A0E1 		mov	r3, r3, lsr #16
 4041 1364 013043E2 		sub	r3, r3, #1
 4042 1368 0338A0E1 		mov	r3, r3, asl #16
 4043 136c 2328A0E1 		mov	r2, r3, lsr #16
 4044 1370 0F305BE5 		ldrb	r3, [fp, #-15]	@ zero_extendqisi2
 4045 1374 013083E2 		add	r3, r3, #1
 4046 1378 0338A0E1 		mov	r3, r3, asl #16
 4047 137c 2338A0E1 		mov	r3, r3, lsr #16
 4048 1380 03C0A0E1 		mov	ip, r3	@ movhi
 4049 1384 0CC2A0E1 		mov	ip, ip, asl #4
 4050 1388 0C3063E0 		rsb	r3, r3, ip
 4051 138c 0331A0E1 		mov	r3, r3, asl #2
 4052 1390 0338A0E1 		mov	r3, r3, asl #16
 4053 1394 23C8A0E1 		mov	ip, r3, lsr #16
 4054 1398 B4315BE1 		ldrh	r3, [fp, #-20]	@ movhi
 4055 139c 03308CE0 		add	r3, ip, r3
 4056 13a0 0338A0E1 		mov	r3, r3, asl #16
 4057 13a4 2338A0E1 		mov	r3, r3, lsr #16
 4058 13a8 013043E2 		sub	r3, r3, #1
 4059 13ac 0338A0E1 		mov	r3, r3, asl #16
 4060 13b0 2338A0E1 		mov	r3, r3, lsr #16
 4061 13b4 0FC0A0E3 		mov	ip, #15
 4062 13b8 00C08DE5 		str	ip, [sp, #0]
 4063 13bc 01C0A0E3 		mov	ip, #1
 4064 13c0 04C08DE5 		str	ip, [sp, #4]
 4065 13c4 FEFFFFEB 		bl	lcd_draw_box
 599:../proyecto.c ****         for(col = 0; col < 4; col++) {
 4066              		.loc 1 599 0 discriminator 2
 4067 13c8 10305BE5 		ldrb	r3, [fp, #-16]
 4068 13cc 013083E2 		add	r3, r3, #1
 4069 13d0 10304BE5 		strb	r3, [fp, #-16]
 4070              	.L104:
 599:../proyecto.c ****         for(col = 0; col < 4; col++) {
 4071              		.loc 1 599 0 is_stmt 0 discriminator 1
 4072 13d4 10305BE5 		ldrb	r3, [fp, #-16]	@ zero_extendqisi2
 4073 13d8 030053E3 		cmp	r3, #3
 4074 13dc C0FFFF9A 		bls	.L105
 598:../proyecto.c ****     for(row = 0; row < 2; row++) {
 4075              		.loc 1 598 0 is_stmt 1
 4076 13e0 0F305BE5 		ldrb	r3, [fp, #-15]
 4077 13e4 013083E2 		add	r3, r3, #1
 4078 13e8 0F304BE5 		strb	r3, [fp, #-15]
 4079              	.L103:
 598:../proyecto.c ****     for(row = 0; row < 2; row++) {
 4080              		.loc 1 598 0 is_stmt 0 discriminator 1
 4081 13ec 0F305BE5 		ldrb	r3, [fp, #-15]	@ zero_extendqisi2
 4082 13f0 010053E3 		cmp	r3, #1
 4083 13f4 B7FFFF9A 		bls	.L106
 601:../proyecto.c ****         }
 602:../proyecto.c ****     }
 603:../proyecto.c **** 
 604:../proyecto.c ****     // Números o X en cada celda (centrados)
 605:../proyecto.c ****     x = 32;  // Posición inicial X para números
 4084              		.loc 1 605 0 is_stmt 1
 4085 13f8 2030A0E3 		mov	r3, #32
 4086 13fc B2314BE1 		strh	r3, [fp, #-18]	@ movhi
 606:../proyecto.c ****     y = 116; // Primera fila de números
 4087              		.loc 1 606 0
 4088 1400 7430A0E3 		mov	r3, #116
 4089 1404 B4314BE1 		strh	r3, [fp, #-20]	@ movhi
 607:../proyecto.c **** 
 608:../proyecto.c ****     for(i = 0; i < MAXPLACES/2; i++) {
 4090              		.loc 1 608 0
 4091 1408 0030A0E3 		mov	r3, #0
 4092 140c BE304BE1 		strh	r3, [fp, #-14]	@ movhi
 4093 1410 330000EA 		b	.L107
 4094              	.L110:
 609:../proyecto.c ****         if(parking[i].occupied)
 4095              		.loc 1 609 0
 4096 1414 BE205BE1 		ldrh	r2, [fp, #-14]
 4097 1418 DC019FE5 		ldr	r0, .L115
 4098 141c 0810A0E3 		mov	r1, #8
 4099 1420 0230A0E1 		mov	r3, r2
 4100 1424 0332A0E1 		mov	r3, r3, asl #4
 4101 1428 033062E0 		rsb	r3, r2, r3
 4102 142c 033080E0 		add	r3, r0, r3
 4103 1430 013083E0 		add	r3, r3, r1
 4104 1434 0630D3E5 		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 4105 1438 000053E3 		cmp	r3, #0
 4106 143c 1100000A 		beq	.L108
 610:../proyecto.c ****             lcd_putchar_x2(x + (i*80), y, BLACK, 'X');
 4107              		.loc 1 610 0
 4108 1440 BE305BE1 		ldrh	r3, [fp, #-14]	@ movhi
 4109 1444 0320A0E1 		mov	r2, r3	@ movhi
 4110 1448 0221A0E1 		mov	r2, r2, asl #2
 4111 144c 033082E0 		add	r3, r2, r3
 4112 1450 0332A0E1 		mov	r3, r3, asl #4
 4113 1454 0338A0E1 		mov	r3, r3, asl #16
 4114 1458 2328A0E1 		mov	r2, r3, lsr #16
 4115 145c B2315BE1 		ldrh	r3, [fp, #-18]	@ movhi
 4116 1460 033082E0 		add	r3, r2, r3
 4117 1464 0338A0E1 		mov	r3, r3, asl #16
 4118 1468 2328A0E1 		mov	r2, r3, lsr #16
 4119 146c B4315BE1 		ldrh	r3, [fp, #-20]
 4120 1470 0200A0E1 		mov	r0, r2
 4121 1474 0310A0E1 		mov	r1, r3
 4122 1478 0F20A0E3 		mov	r2, #15
 4123 147c 5830A0E3 		mov	r3, #88
 4124 1480 FEFFFFEB 		bl	lcd_putchar_x2
 4125 1484 130000EA 		b	.L109
 4126              	.L108:
 611:../proyecto.c ****         else
 612:../proyecto.c ****             lcd_putchar_x2(x + (i*80), y, BLACK, '0'+i+1);
 4127              		.loc 1 612 0
 4128 1488 BE305BE1 		ldrh	r3, [fp, #-14]	@ movhi
 4129 148c 0320A0E1 		mov	r2, r3	@ movhi
 4130 1490 0221A0E1 		mov	r2, r2, asl #2
 4131 1494 033082E0 		add	r3, r2, r3
 4132 1498 0332A0E1 		mov	r3, r3, asl #4
 4133 149c 0338A0E1 		mov	r3, r3, asl #16
 4134 14a0 2328A0E1 		mov	r2, r3, lsr #16
 4135 14a4 B2315BE1 		ldrh	r3, [fp, #-18]	@ movhi
 4136 14a8 033082E0 		add	r3, r2, r3
 4137 14ac 0338A0E1 		mov	r3, r3, asl #16
 4138 14b0 2318A0E1 		mov	r1, r3, lsr #16
 4139 14b4 BE305BE1 		ldrh	r3, [fp, #-14]	@ movhi
 4140 14b8 FF3003E2 		and	r3, r3, #255
 4141 14bc 313083E2 		add	r3, r3, #49
 4142 14c0 FF3003E2 		and	r3, r3, #255
 4143 14c4 B4215BE1 		ldrh	r2, [fp, #-20]
 4144 14c8 0100A0E1 		mov	r0, r1
 4145 14cc 0210A0E1 		mov	r1, r2
 4146 14d0 0F20A0E3 		mov	r2, #15
 4147 14d4 FEFFFFEB 		bl	lcd_putchar_x2
 4148              	.L109:
 608:../proyecto.c ****     for(i = 0; i < MAXPLACES/2; i++) {
 4149              		.loc 1 608 0
 4150 14d8 BE305BE1 		ldrh	r3, [fp, #-14]	@ movhi
 4151 14dc 013083E2 		add	r3, r3, #1
 4152 14e0 BE304BE1 		strh	r3, [fp, #-14]	@ movhi
 4153              	.L107:
 608:../proyecto.c ****     for(i = 0; i < MAXPLACES/2; i++) {
 4154              		.loc 1 608 0 is_stmt 0 discriminator 1
 4155 14e4 BE305BE1 		ldrh	r3, [fp, #-14]
 4156 14e8 030053E3 		cmp	r3, #3
 4157 14ec C8FFFF9A 		bls	.L110
 613:../proyecto.c ****     }
 614:../proyecto.c **** 
 615:../proyecto.c ****     y = 178; // Segunda fila de números
 4158              		.loc 1 615 0 is_stmt 1
 4159 14f0 B230A0E3 		mov	r3, #178
 4160 14f4 B4314BE1 		strh	r3, [fp, #-20]	@ movhi
 616:../proyecto.c ****     for(; i < MAXPLACES; i++) {
 4161              		.loc 1 616 0
 4162 14f8 390000EA 		b	.L111
 4163              	.L114:
 617:../proyecto.c ****         if(parking[i].occupied)
 4164              		.loc 1 617 0
 4165 14fc BE205BE1 		ldrh	r2, [fp, #-14]
 4166 1500 F4009FE5 		ldr	r0, .L115
 4167 1504 0810A0E3 		mov	r1, #8
 4168 1508 0230A0E1 		mov	r3, r2
 4169 150c 0332A0E1 		mov	r3, r3, asl #4
 4170 1510 033062E0 		rsb	r3, r2, r3
 4171 1514 033080E0 		add	r3, r0, r3
 4172 1518 013083E0 		add	r3, r3, r1
 4173 151c 0630D3E5 		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 4174 1520 000053E3 		cmp	r3, #0
 4175 1524 1400000A 		beq	.L112
 618:../proyecto.c ****             lcd_putchar_x2(x + ((i-4)*80), y, BLACK, 'X');
 4176              		.loc 1 618 0
 4177 1528 BE305BE1 		ldrh	r3, [fp, #-14]	@ movhi
 4178 152c 0320A0E1 		mov	r2, r3	@ movhi
 4179 1530 0221A0E1 		mov	r2, r2, asl #2
 4180 1534 033082E0 		add	r3, r2, r3
 4181 1538 0332A0E1 		mov	r3, r3, asl #4
 4182 153c 0338A0E1 		mov	r3, r3, asl #16
 4183 1540 2328A0E1 		mov	r2, r3, lsr #16
 4184 1544 B2315BE1 		ldrh	r3, [fp, #-18]	@ movhi
 4185 1548 033082E0 		add	r3, r2, r3
 4186 154c 0338A0E1 		mov	r3, r3, asl #16
 4187 1550 2338A0E1 		mov	r3, r3, lsr #16
 4188 1554 053D43E2 		sub	r3, r3, #320
 4189 1558 0338A0E1 		mov	r3, r3, asl #16
 4190 155c 2328A0E1 		mov	r2, r3, lsr #16
 4191 1560 B4315BE1 		ldrh	r3, [fp, #-20]
 4192 1564 0200A0E1 		mov	r0, r2
 4193 1568 0310A0E1 		mov	r1, r3
 4194 156c 0F20A0E3 		mov	r2, #15
 4195 1570 5830A0E3 		mov	r3, #88
 4196 1574 FEFFFFEB 		bl	lcd_putchar_x2
 4197 1578 160000EA 		b	.L113
 4198              	.L112:
 619:../proyecto.c ****         else
 620:../proyecto.c ****             lcd_putchar_x2(x + ((i-4)*80), y, BLACK, '0'+i+1);
 4199              		.loc 1 620 0
 4200 157c BE305BE1 		ldrh	r3, [fp, #-14]	@ movhi
 4201 1580 0320A0E1 		mov	r2, r3	@ movhi
 4202 1584 0221A0E1 		mov	r2, r2, asl #2
 4203 1588 033082E0 		add	r3, r2, r3
 4204 158c 0332A0E1 		mov	r3, r3, asl #4
 4205 1590 0338A0E1 		mov	r3, r3, asl #16
 4206 1594 2328A0E1 		mov	r2, r3, lsr #16
 4207 1598 B2315BE1 		ldrh	r3, [fp, #-18]	@ movhi
 4208 159c 033082E0 		add	r3, r2, r3
 4209 15a0 0338A0E1 		mov	r3, r3, asl #16
 4210 15a4 2338A0E1 		mov	r3, r3, lsr #16
 4211 15a8 053D43E2 		sub	r3, r3, #320
 4212 15ac 0338A0E1 		mov	r3, r3, asl #16
 4213 15b0 2318A0E1 		mov	r1, r3, lsr #16
 4214 15b4 BE305BE1 		ldrh	r3, [fp, #-14]	@ movhi
 4215 15b8 FF3003E2 		and	r3, r3, #255
 4216 15bc 313083E2 		add	r3, r3, #49
 4217 15c0 FF3003E2 		and	r3, r3, #255
 4218 15c4 B4215BE1 		ldrh	r2, [fp, #-20]
 4219 15c8 0100A0E1 		mov	r0, r1
 4220 15cc 0210A0E1 		mov	r1, r2
 4221 15d0 0F20A0E3 		mov	r2, #15
 4222 15d4 FEFFFFEB 		bl	lcd_putchar_x2
 4223              	.L113:
 616:../proyecto.c ****     for(; i < MAXPLACES; i++) {
 4224              		.loc 1 616 0
 4225 15d8 BE305BE1 		ldrh	r3, [fp, #-14]	@ movhi
 4226 15dc 013083E2 		add	r3, r3, #1
 4227 15e0 BE304BE1 		strh	r3, [fp, #-14]	@ movhi
 4228              	.L111:
 616:../proyecto.c ****     for(; i < MAXPLACES; i++) {
 4229              		.loc 1 616 0 is_stmt 0 discriminator 1
 4230 15e4 BE305BE1 		ldrh	r3, [fp, #-14]
 4231 15e8 070053E3 		cmp	r3, #7
 4232 15ec C2FFFF9A 		bls	.L114
 621:../proyecto.c ****     }
 622:../proyecto.c **** }
 4233              		.loc 1 622 0 is_stmt 1
 4234 15f0 0CD04BE2 		sub	sp, fp, #12
 4235 15f4 00689DE8 		ldmfd	sp, {fp, sp, lr}
 4236 15f8 1EFF2FE1 		bx	lr
 4237              	.L116:
 4238              		.align	2
 4239              	.L115:
 4240 15fc 00000000 		.word	parking
 4241              		.cfi_endproc
 4242              	.LFE9:
 4244              		.align	2
 4245              		.global	checkSelectedPlace
 4247              	checkSelectedPlace:
 4248              	.LFB10:
 623:../proyecto.c **** 
 624:../proyecto.c **** uint8 checkSelectedPlace(uint16 x, uint16 y) {//Revisado
 4249              		.loc 1 624 0
 4250              		.cfi_startproc
 4251              		@ Function supports interworking.
 4252              		@ args = 0, pretend = 0, frame = 16
 4253              		@ frame_needed = 1, uses_anonymous_args = 0
 4254 1600 0DC0A0E1 		mov	ip, sp
 4255              	.LCFI20:
 4256              		.cfi_def_cfa_register 12
 4257 1604 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 4258 1608 04B04CE2 		sub	fp, ip, #4
 4259              		.cfi_offset 14, -8
 4260              		.cfi_offset 13, -12
 4261              		.cfi_offset 11, -16
 4262              	.LCFI21:
 4263              		.cfi_def_cfa 11, 4
 4264 160c 10D04DE2 		sub	sp, sp, #16
 4265 1610 0020A0E1 		mov	r2, r0
 4266 1614 0130A0E1 		mov	r3, r1
 4267 1618 B6214BE1 		strh	r2, [fp, #-22]	@ movhi
 4268 161c B8314BE1 		strh	r3, [fp, #-24]	@ movhi
 625:../proyecto.c ****     int col = x / 80;
 4269              		.loc 1 625 0
 4270 1620 B6215BE1 		ldrh	r2, [fp, #-22]
 4271 1624 A4309FE5 		ldr	r3, .L120
 4272 1628 921383E0 		umull	r1, r3, r2, r3
 4273 162c 2333A0E1 		mov	r3, r3, lsr #6
 4274 1630 0338A0E1 		mov	r3, r3, asl #16
 4275 1634 2338A0E1 		mov	r3, r3, lsr #16
 4276 1638 10300BE5 		str	r3, [fp, #-16]
 626:../proyecto.c ****     int row = (y -119) / 60;
 4277              		.loc 1 626 0
 4278 163c B8315BE1 		ldrh	r3, [fp, #-24]
 4279 1640 773043E2 		sub	r3, r3, #119
 4280 1644 88209FE5 		ldr	r2, .L120+4
 4281 1648 9312C2E0 		smull	r1, r2, r3, r2
 4282 164c 032082E0 		add	r2, r2, r3
 4283 1650 C222A0E1 		mov	r2, r2, asr #5
 4284 1654 C33FA0E1 		mov	r3, r3, asr #31
 4285 1658 023063E0 		rsb	r3, r3, r2
 4286 165c 14300BE5 		str	r3, [fp, #-20]
 627:../proyecto.c **** 
 628:../proyecto.c ****     // Verificamos que el toque esté dentro de los límites
 629:../proyecto.c ****     if (col >= 0 && col < 4 && row >= 0 && row < 2)
 4287              		.loc 1 629 0
 4288 1660 10301BE5 		ldr	r3, [fp, #-16]
 4289 1664 000053E3 		cmp	r3, #0
 4290 1668 130000BA 		blt	.L118
 4291              		.loc 1 629 0 is_stmt 0 discriminator 1
 4292 166c 10301BE5 		ldr	r3, [fp, #-16]
 4293 1670 030053E3 		cmp	r3, #3
 4294 1674 100000CA 		bgt	.L118
 4295 1678 14301BE5 		ldr	r3, [fp, #-20]
 4296 167c 000053E3 		cmp	r3, #0
 4297 1680 0D0000BA 		blt	.L118
 4298 1684 14301BE5 		ldr	r3, [fp, #-20]
 4299 1688 010053E3 		cmp	r3, #1
 4300 168c 0A0000CA 		bgt	.L118
 630:../proyecto.c ****     {
 631:../proyecto.c ****         return (row * 4) + col + 1;
 4301              		.loc 1 631 0 is_stmt 1
 4302 1690 14301BE5 		ldr	r3, [fp, #-20]
 4303 1694 FF3003E2 		and	r3, r3, #255
 4304 1698 0331A0E1 		mov	r3, r3, asl #2
 4305 169c FF2003E2 		and	r2, r3, #255
 4306 16a0 10301BE5 		ldr	r3, [fp, #-16]
 4307 16a4 FF3003E2 		and	r3, r3, #255
 4308 16a8 033082E0 		add	r3, r2, r3
 4309 16ac FF3003E2 		and	r3, r3, #255
 4310 16b0 013083E2 		add	r3, r3, #1
 4311 16b4 FF3003E2 		and	r3, r3, #255
 4312 16b8 000000EA 		b	.L119
 4313              	.L118:
 632:../proyecto.c ****     }
 633:../proyecto.c **** 
 634:../proyecto.c ****     return 0; // Retorna 0 si no se seleccionó ninguna plaza válida
 4314              		.loc 1 634 0
 4315 16bc 0030A0E3 		mov	r3, #0
 4316              	.L119:
 635:../proyecto.c **** }
 4317              		.loc 1 635 0
 4318 16c0 0300A0E1 		mov	r0, r3
 4319 16c4 0CD04BE2 		sub	sp, fp, #12
 4320 16c8 00689DE8 		ldmfd	sp, {fp, sp, lr}
 4321 16cc 1EFF2FE1 		bx	lr
 4322              	.L121:
 4323              		.align	2
 4324              	.L120:
 4325 16d0 CDCCCCCC 		.word	-858993459
 4326 16d4 89888888 		.word	-2004318071
 4327              		.cfi_endproc
 4328              	.LFE10:
 4330              		.section	.rodata
 4331 0209 000000   		.align	2
 4332              	.LC23:
 4333 020c 206F6375 		.ascii	" ocupada\000"
 4333      70616461 
 4333      00
 4334 0215 000000   		.align	2
 4335              	.LC24:
 4336 0218 46696E3A 		.ascii	"Fin: \000"
 4336      2000
 4337              		.text
 4338              		.align	2
 4339              		.global	showPlaceOccupiedMessage
 4341              	showPlaceOccupiedMessage:
 4342              	.LFB11:
 636:../proyecto.c **** 
 637:../proyecto.c **** void showPlaceOccupiedMessage(uint8 placeNum) {
 4343              		.loc 1 637 0
 4344              		.cfi_startproc
 4345              		@ Function supports interworking.
 4346              		@ args = 0, pretend = 0, frame = 8
 4347              		@ frame_needed = 1, uses_anonymous_args = 0
 4348 16d8 0DC0A0E1 		mov	ip, sp
 4349              	.LCFI22:
 4350              		.cfi_def_cfa_register 12
 4351 16dc 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 4352 16e0 04B04CE2 		sub	fp, ip, #4
 4353              		.cfi_offset 14, -8
 4354              		.cfi_offset 13, -12
 4355              		.cfi_offset 11, -16
 4356              	.LCFI23:
 4357              		.cfi_def_cfa 11, 4
 4358 16e4 08D04DE2 		sub	sp, sp, #8
 4359 16e8 0030A0E1 		mov	r3, r0
 4360 16ec 0D304BE5 		strb	r3, [fp, #-13]
 638:../proyecto.c **** 	lcd_clear();
 4361              		.loc 1 638 0
 4362 16f0 FEFFFFEB 		bl	lcd_clear
 639:../proyecto.c **** 
 640:../proyecto.c **** 	    // Primera línea - Plaza X ocupada (en grande)
 641:../proyecto.c **** 	    lcd_puts_x2(70, 60, BLACK, "Plaza ");
 4363              		.loc 1 641 0
 4364 16f4 4600A0E3 		mov	r0, #70
 4365 16f8 3C10A0E3 		mov	r1, #60
 4366 16fc 0F20A0E3 		mov	r2, #15
 4367 1700 E8319FE5 		ldr	r3, .L123
 4368 1704 FEFFFFEB 		bl	lcd_puts_x2
 642:../proyecto.c **** 	    lcd_putint_x2(140, 60, BLACK, placeNum);
 4369              		.loc 1 642 0
 4370 1708 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 4371 170c 8C00A0E3 		mov	r0, #140
 4372 1710 3C10A0E3 		mov	r1, #60
 4373 1714 0F20A0E3 		mov	r2, #15
 4374 1718 FEFFFFEB 		bl	lcd_putint_x2
 643:../proyecto.c **** 	    lcd_puts_x2(160, 60, BLACK, " ocupada");
 4375              		.loc 1 643 0
 4376 171c A000A0E3 		mov	r0, #160
 4377 1720 3C10A0E3 		mov	r1, #60
 4378 1724 0F20A0E3 		mov	r2, #15
 4379 1728 C4319FE5 		ldr	r3, .L123+4
 4380 172c FEFFFFEB 		bl	lcd_puts_x2
 644:../proyecto.c **** 
 645:../proyecto.c **** 	    // Segunda línea - Fin de estacionamiento
 646:../proyecto.c **** 	    lcd_puts(50, 120, BLACK, "Fin: ");
 4381              		.loc 1 646 0
 4382 1730 3200A0E3 		mov	r0, #50
 4383 1734 7810A0E3 		mov	r1, #120
 4384 1738 0F20A0E3 		mov	r2, #15
 4385 173c B4319FE5 		ldr	r3, .L123+8
 4386 1740 FEFFFFEB 		bl	lcd_puts
 647:../proyecto.c **** 	    lcd_puts(80, 120, BLACK, calculate_weekday(parking[placeNum-1].endTime.wday));
 4387              		.loc 1 647 0
 4388 1744 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 4389 1748 012043E2 		sub	r2, r3, #1
 4390 174c A8119FE5 		ldr	r1, .L123+12
 4391 1750 0230A0E1 		mov	r3, r2
 4392 1754 0332A0E1 		mov	r3, r3, asl #4
 4393 1758 033062E0 		rsb	r3, r2, r3
 4394 175c 033081E0 		add	r3, r1, r3
 4395 1760 0B30D3E5 		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 4396 1764 0300A0E1 		mov	r0, r3
 4397 1768 FEFFFFEB 		bl	calculate_weekday
 4398 176c 0030A0E1 		mov	r3, r0
 4399 1770 5000A0E3 		mov	r0, #80
 4400 1774 7810A0E3 		mov	r1, #120
 4401 1778 0F20A0E3 		mov	r2, #15
 4402 177c FEFFFFEB 		bl	lcd_puts
 648:../proyecto.c **** 	    lcd_putchar(110, 120, BLACK, ',');
 4403              		.loc 1 648 0
 4404 1780 6E00A0E3 		mov	r0, #110
 4405 1784 7810A0E3 		mov	r1, #120
 4406 1788 0F20A0E3 		mov	r2, #15
 4407 178c 2C30A0E3 		mov	r3, #44
 4408 1790 FEFFFFEB 		bl	lcd_putchar
 649:../proyecto.c **** 	    lcd_putint(120, 120, BLACK, parking[placeNum-1].endTime.mday);
 4409              		.loc 1 649 0
 4410 1794 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 4411 1798 012043E2 		sub	r2, r3, #1
 4412 179c 58119FE5 		ldr	r1, .L123+12
 4413 17a0 0230A0E1 		mov	r3, r2
 4414 17a4 0332A0E1 		mov	r3, r3, asl #4
 4415 17a8 033062E0 		rsb	r3, r2, r3
 4416 17ac 033081E0 		add	r3, r1, r3
 4417 17b0 0A30D3E5 		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 4418 17b4 7800A0E3 		mov	r0, #120
 4419 17b8 7810A0E3 		mov	r1, #120
 4420 17bc 0F20A0E3 		mov	r2, #15
 4421 17c0 FEFFFFEB 		bl	lcd_putint
 650:../proyecto.c **** 	    lcd_putchar(135, 120, BLACK, '/');
 4422              		.loc 1 650 0
 4423 17c4 8700A0E3 		mov	r0, #135
 4424 17c8 7810A0E3 		mov	r1, #120
 4425 17cc 0F20A0E3 		mov	r2, #15
 4426 17d0 2F30A0E3 		mov	r3, #47
 4427 17d4 FEFFFFEB 		bl	lcd_putchar
 651:../proyecto.c **** 	    lcd_putint(145, 120, BLACK, parking[placeNum-1].endTime.mon);
 4428              		.loc 1 651 0
 4429 17d8 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 4430 17dc 012043E2 		sub	r2, r3, #1
 4431 17e0 14119FE5 		ldr	r1, .L123+12
 4432 17e4 0230A0E1 		mov	r3, r2
 4433 17e8 0332A0E1 		mov	r3, r3, asl #4
 4434 17ec 033062E0 		rsb	r3, r2, r3
 4435 17f0 033081E0 		add	r3, r1, r3
 4436 17f4 0C30D3E5 		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 4437 17f8 9100A0E3 		mov	r0, #145
 4438 17fc 7810A0E3 		mov	r1, #120
 4439 1800 0F20A0E3 		mov	r2, #15
 4440 1804 FEFFFFEB 		bl	lcd_putint
 652:../proyecto.c **** 	    lcd_putchar(160, 120, BLACK, '/');
 4441              		.loc 1 652 0
 4442 1808 A000A0E3 		mov	r0, #160
 4443 180c 7810A0E3 		mov	r1, #120
 4444 1810 0F20A0E3 		mov	r2, #15
 4445 1814 2F30A0E3 		mov	r3, #47
 4446 1818 FEFFFFEB 		bl	lcd_putchar
 653:../proyecto.c **** 	    lcd_putint(170, 120, BLACK, parking[placeNum-1].endTime.year);
 4447              		.loc 1 653 0
 4448 181c 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 4449 1820 012043E2 		sub	r2, r3, #1
 4450 1824 D0109FE5 		ldr	r1, .L123+12
 4451 1828 0230A0E1 		mov	r3, r2
 4452 182c 0332A0E1 		mov	r3, r3, asl #4
 4453 1830 033062E0 		rsb	r3, r2, r3
 4454 1834 033081E0 		add	r3, r1, r3
 4455 1838 0D30D3E5 		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 4456 183c AA00A0E3 		mov	r0, #170
 4457 1840 7810A0E3 		mov	r1, #120
 4458 1844 0F20A0E3 		mov	r2, #15
 4459 1848 FEFFFFEB 		bl	lcd_putint
 654:../proyecto.c **** 	    lcd_putchar(185, 120, BLACK, ' ');
 4460              		.loc 1 654 0
 4461 184c B900A0E3 		mov	r0, #185
 4462 1850 7810A0E3 		mov	r1, #120
 4463 1854 0F20A0E3 		mov	r2, #15
 4464 1858 2030A0E3 		mov	r3, #32
 4465 185c FEFFFFEB 		bl	lcd_putchar
 655:../proyecto.c **** 	    lcd_putint(195, 120, BLACK, parking[placeNum-1].endTime.hour);
 4466              		.loc 1 655 0
 4467 1860 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 4468 1864 012043E2 		sub	r2, r3, #1
 4469 1868 8C109FE5 		ldr	r1, .L123+12
 4470 186c 0230A0E1 		mov	r3, r2
 4471 1870 0332A0E1 		mov	r3, r3, asl #4
 4472 1874 033062E0 		rsb	r3, r2, r3
 4473 1878 033081E0 		add	r3, r1, r3
 4474 187c 0930D3E5 		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 4475 1880 C300A0E3 		mov	r0, #195
 4476 1884 7810A0E3 		mov	r1, #120
 4477 1888 0F20A0E3 		mov	r2, #15
 4478 188c FEFFFFEB 		bl	lcd_putint
 656:../proyecto.c **** 	    lcd_putchar(210, 120, BLACK, ':');
 4479              		.loc 1 656 0
 4480 1890 D200A0E3 		mov	r0, #210
 4481 1894 7810A0E3 		mov	r1, #120
 4482 1898 0F20A0E3 		mov	r2, #15
 4483 189c 3A30A0E3 		mov	r3, #58
 4484 18a0 FEFFFFEB 		bl	lcd_putchar
 657:../proyecto.c **** 	    lcd_putint(220, 120, BLACK, parking[placeNum-1].endTime.min);
 4485              		.loc 1 657 0
 4486 18a4 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 4487 18a8 012043E2 		sub	r2, r3, #1
 4488 18ac 48109FE5 		ldr	r1, .L123+12
 4489 18b0 0230A0E1 		mov	r3, r2
 4490 18b4 0332A0E1 		mov	r3, r3, asl #4
 4491 18b8 033062E0 		rsb	r3, r2, r3
 4492 18bc 033081E0 		add	r3, r1, r3
 4493 18c0 0830D3E5 		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 4494 18c4 DC00A0E3 		mov	r0, #220
 4495 18c8 7810A0E3 		mov	r1, #120
 4496 18cc 0F20A0E3 		mov	r2, #15
 4497 18d0 FEFFFFEB 		bl	lcd_putint
 658:../proyecto.c **** 
 659:../proyecto.c **** 	    sw_delay_ms(2000);
 4498              		.loc 1 659 0
 4499 18d4 7D0EA0E3 		mov	r0, #2000
 4500 18d8 FEFFFFEB 		bl	sw_delay_ms
 660:../proyecto.c **** 		lcd_clear();
 4501              		.loc 1 660 0
 4502 18dc FEFFFFEB 		bl	lcd_clear
 661:../proyecto.c **** 		drawParkingGrid();
 4503              		.loc 1 661 0
 4504 18e0 FEFFFFEB 		bl	drawParkingGrid
 662:../proyecto.c **** }
 4505              		.loc 1 662 0
 4506 18e4 0CD04BE2 		sub	sp, fp, #12
 4507 18e8 00689DE8 		ldmfd	sp, {fp, sp, lr}
 4508 18ec 1EFF2FE1 		bx	lr
 4509              	.L124:
 4510              		.align	2
 4511              	.L123:
 4512 18f0 60000000 		.word	.LC4
 4513 18f4 0C020000 		.word	.LC23
 4514 18f8 18020000 		.word	.LC24
 4515 18fc 00000000 		.word	parking
 4516              		.cfi_endproc
 4517              	.LFE11:
 4519              		.section	.rodata
 4520 021e 0000     		.align	2
 4521              	.LC25:
 4522 0220 54415249 		.ascii	"TARIFA\000"
 4522      464100
 4523 0227 00       		.align	2
 4524              	.LC26:
 4525 0228 50726563 		.ascii	"Precio por minuto: 0,01 euros\000"
 4525      696F2070 
 4525      6F72206D 
 4525      696E7574 
 4525      6F3A2030 
 4526 0246 0000     		.align	2
 4527              	.LC27:
 4528 0248 45737461 		.ascii	"Estancia minima:  20 minutos\000"
 4528      6E636961 
 4528      206D696E 
 4528      696D613A 
 4528      20203230 
 4529 0265 000000   		.align	2
 4530              	.LC28:
 4531 0268 45737461 		.ascii	"Estancia maxima: 240 minutos\000"
 4531      6E636961 
 4531      206D6178 
 4531      696D613A 
 4531      20323430 
 4532 0285 000000   		.align	2
 4533              	.LC29:
 4534 0288 43726564 		.ascii	"Credito: \000"
 4534      69746F3A 
 4534      2000
 4535 0292 0000     		.align	2
 4536              	.LC30:
 4537 0294 20657572 		.ascii	" euros\000"
 4537      6F7300
 4538 029b 00       		.align	2
 4539              	.LC31:
 4540 029c 2046696E 		.ascii	" Fin: \000"
 4540      3A2000
 4541 02a3 00       		.align	2
 4542              	.LC32:
 4543 02a4 496E7365 		.ascii	"Inserte monedas\000"
 4543      72746520 
 4543      6D6F6E65 
 4543      64617300 
 4544              		.align	2
 4545              	.LC33:
 4546 02b4 50756C73 		.ascii	"Pulse la pantalla para aceptar\000"
 4546      65206C61 
 4546      2070616E 
 4546      74616C6C 
 4546      61207061 
 4547 02d3 00       		.text
 4548              		.align	2
 4549              		.global	showTariffScreen
 4551              	showTariffScreen:
 4552              	.LFB12:
 663:../proyecto.c **** 
 664:../proyecto.c **** void showTariffScreen(uint8 placeNum, uint16 credit)
 665:../proyecto.c **** {
 4553              		.loc 1 665 0
 4554              		.cfi_startproc
 4555              		@ Function supports interworking.
 4556              		@ args = 0, pretend = 0, frame = 8
 4557              		@ frame_needed = 1, uses_anonymous_args = 0
 4558 1900 0DC0A0E1 		mov	ip, sp
 4559              	.LCFI24:
 4560              		.cfi_def_cfa_register 12
 4561 1904 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 4562 1908 04B04CE2 		sub	fp, ip, #4
 4563              		.cfi_offset 14, -8
 4564              		.cfi_offset 13, -12
 4565              		.cfi_offset 11, -16
 4566              	.LCFI25:
 4567              		.cfi_def_cfa 11, 4
 4568 190c 10D04DE2 		sub	sp, sp, #16
 4569 1910 0020A0E1 		mov	r2, r0
 4570 1914 0130A0E1 		mov	r3, r1
 4571 1918 0D204BE5 		strb	r2, [fp, #-13]
 4572 191c B0314BE1 		strh	r3, [fp, #-16]	@ movhi
 666:../proyecto.c ****     lcd_clear();
 4573              		.loc 1 666 0
 4574 1920 FEFFFFEB 		bl	lcd_clear
 667:../proyecto.c **** 
 668:../proyecto.c ****     // Dibujamos el rectángulo para la tarifa
 669:../proyecto.c ****     lcd_draw_box(1, 40, 319, 130, BLACK, 1);
 4575              		.loc 1 669 0
 4576 1924 0F30A0E3 		mov	r3, #15
 4577 1928 00308DE5 		str	r3, [sp, #0]
 4578 192c 0130A0E3 		mov	r3, #1
 4579 1930 04308DE5 		str	r3, [sp, #4]
 4580 1934 0100A0E3 		mov	r0, #1
 4581 1938 2810A0E3 		mov	r1, #40
 4582 193c BC219FE5 		ldr	r2, .L127
 4583 1940 8230A0E3 		mov	r3, #130
 4584 1944 FEFFFFEB 		bl	lcd_draw_box
 670:../proyecto.c **** 
 671:../proyecto.c ****     // Título centrado
 672:../proyecto.c ****     lcd_puts(128, 32, BLACK, "TARIFA");
 4585              		.loc 1 672 0
 4586 1948 8000A0E3 		mov	r0, #128
 4587 194c 2010A0E3 		mov	r1, #32
 4588 1950 0F20A0E3 		mov	r2, #15
 4589 1954 A8319FE5 		ldr	r3, .L127+4
 4590 1958 FEFFFFEB 		bl	lcd_puts
 673:../proyecto.c **** 
 674:../proyecto.c ****     // Información de tarifa dentro del rectángulo
 675:../proyecto.c ****     lcd_puts(32, 56, BLACK, "Precio por minuto: 0,01 euros");
 4591              		.loc 1 675 0
 4592 195c 2000A0E3 		mov	r0, #32
 4593 1960 3810A0E3 		mov	r1, #56
 4594 1964 0F20A0E3 		mov	r2, #15
 4595 1968 98319FE5 		ldr	r3, .L127+8
 4596 196c FEFFFFEB 		bl	lcd_puts
 676:../proyecto.c ****     lcd_puts(32, 80, BLACK, "Estancia minima:  20 minutos");
 4597              		.loc 1 676 0
 4598 1970 2000A0E3 		mov	r0, #32
 4599 1974 5010A0E3 		mov	r1, #80
 4600 1978 0F20A0E3 		mov	r2, #15
 4601 197c 88319FE5 		ldr	r3, .L127+12
 4602 1980 FEFFFFEB 		bl	lcd_puts
 677:../proyecto.c ****     lcd_puts(32, 104, BLACK, "Estancia maxima: 240 minutos");
 4603              		.loc 1 677 0
 4604 1984 2000A0E3 		mov	r0, #32
 4605 1988 6810A0E3 		mov	r1, #104
 4606 198c 0F20A0E3 		mov	r2, #15
 4607 1990 78319FE5 		ldr	r3, .L127+16
 4608 1994 FEFFFFEB 		bl	lcd_puts
 678:../proyecto.c **** 
 679:../proyecto.c ****     // Información de plaza
 680:../proyecto.c ****     lcd_puts_x2(114, 142, BLACK, "Plaza ");
 4609              		.loc 1 680 0
 4610 1998 7200A0E3 		mov	r0, #114
 4611 199c 8E10A0E3 		mov	r1, #142
 4612 19a0 0F20A0E3 		mov	r2, #15
 4613 19a4 68319FE5 		ldr	r3, .L127+20
 4614 19a8 FEFFFFEB 		bl	lcd_puts_x2
 681:../proyecto.c ****     lcd_putint_x2(202, 142, BLACK, placeNum);
 4615              		.loc 1 681 0
 4616 19ac 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 4617 19b0 CA00A0E3 		mov	r0, #202
 4618 19b4 8E10A0E3 		mov	r1, #142
 4619 19b8 0F20A0E3 		mov	r2, #15
 4620 19bc FEFFFFEB 		bl	lcd_putint_x2
 682:../proyecto.c **** 
 683:../proyecto.c ****     // Crédito
 684:../proyecto.c ****     lcd_puts(100, 178, BLACK, "Credito: ");
 4621              		.loc 1 684 0
 4622 19c0 6400A0E3 		mov	r0, #100
 4623 19c4 B210A0E3 		mov	r1, #178
 4624 19c8 0F20A0E3 		mov	r2, #15
 4625 19cc 44319FE5 		ldr	r3, .L127+24
 4626 19d0 FEFFFFEB 		bl	lcd_puts
 685:../proyecto.c ****     lcd_putint(166, 178, BLACK, credit/100);
 4627              		.loc 1 685 0
 4628 19d4 B0215BE1 		ldrh	r2, [fp, #-16]
 4629 19d8 3C319FE5 		ldr	r3, .L127+28
 4630 19dc 921383E0 		umull	r1, r3, r2, r3
 4631 19e0 A332A0E1 		mov	r3, r3, lsr #5
 4632 19e4 0338A0E1 		mov	r3, r3, asl #16
 4633 19e8 2338A0E1 		mov	r3, r3, lsr #16
 4634 19ec A600A0E3 		mov	r0, #166
 4635 19f0 B210A0E3 		mov	r1, #178
 4636 19f4 0F20A0E3 		mov	r2, #15
 4637 19f8 FEFFFFEB 		bl	lcd_putint
 686:../proyecto.c ****     lcd_putchar(174, 178, BLACK, ',');
 4638              		.loc 1 686 0
 4639 19fc AE00A0E3 		mov	r0, #174
 4640 1a00 B210A0E3 		mov	r1, #178
 4641 1a04 0F20A0E3 		mov	r2, #15
 4642 1a08 2C30A0E3 		mov	r3, #44
 4643 1a0c FEFFFFEB 		bl	lcd_putchar
 687:../proyecto.c ****     if(credit % 100 < 10) {
 4644              		.loc 1 687 0
 4645 1a10 B0215BE1 		ldrh	r2, [fp, #-16]
 4646 1a14 00319FE5 		ldr	r3, .L127+28
 4647 1a18 921383E0 		umull	r1, r3, r2, r3
 4648 1a1c A312A0E1 		mov	r1, r3, lsr #5
 4649 1a20 0130A0E1 		mov	r3, r1
 4650 1a24 0331A0E1 		mov	r3, r3, asl #2
 4651 1a28 013083E0 		add	r3, r3, r1
 4652 1a2c 0311A0E1 		mov	r1, r3, asl #2
 4653 1a30 013083E0 		add	r3, r3, r1
 4654 1a34 0331A0E1 		mov	r3, r3, asl #2
 4655 1a38 023063E0 		rsb	r3, r3, r2
 4656 1a3c 0338A0E1 		mov	r3, r3, asl #16
 4657 1a40 2338A0E1 		mov	r3, r3, lsr #16
 4658 1a44 090053E3 		cmp	r3, #9
 4659 1a48 0400008A 		bhi	.L126
 688:../proyecto.c ****         lcd_putchar(182, 178, BLACK, '0');
 4660              		.loc 1 688 0
 4661 1a4c B600A0E3 		mov	r0, #182
 4662 1a50 B210A0E3 		mov	r1, #178
 4663 1a54 0F20A0E3 		mov	r2, #15
 4664 1a58 3030A0E3 		mov	r3, #48
 4665 1a5c FEFFFFEB 		bl	lcd_putchar
 4666              	.L126:
 689:../proyecto.c ****     }
 690:../proyecto.c ****     lcd_putint(190, 178, BLACK, credit % 100);
 4667              		.loc 1 690 0
 4668 1a60 B0215BE1 		ldrh	r2, [fp, #-16]
 4669 1a64 B0309FE5 		ldr	r3, .L127+28
 4670 1a68 921383E0 		umull	r1, r3, r2, r3
 4671 1a6c A312A0E1 		mov	r1, r3, lsr #5
 4672 1a70 0130A0E1 		mov	r3, r1
 4673 1a74 0331A0E1 		mov	r3, r3, asl #2
 4674 1a78 013083E0 		add	r3, r3, r1
 4675 1a7c 0311A0E1 		mov	r1, r3, asl #2
 4676 1a80 013083E0 		add	r3, r3, r1
 4677 1a84 0331A0E1 		mov	r3, r3, asl #2
 4678 1a88 023063E0 		rsb	r3, r3, r2
 4679 1a8c 0338A0E1 		mov	r3, r3, asl #16
 4680 1a90 2338A0E1 		mov	r3, r3, lsr #16
 4681 1a94 BE00A0E3 		mov	r0, #190
 4682 1a98 B210A0E3 		mov	r1, #178
 4683 1a9c 0F20A0E3 		mov	r2, #15
 4684 1aa0 FEFFFFEB 		bl	lcd_putint
 691:../proyecto.c ****     lcd_puts(202, 178, BLACK, " euros");
 4685              		.loc 1 691 0
 4686 1aa4 CA00A0E3 		mov	r0, #202
 4687 1aa8 B210A0E3 		mov	r1, #178
 4688 1aac 0F20A0E3 		mov	r2, #15
 4689 1ab0 68309FE5 		ldr	r3, .L127+32
 4690 1ab4 FEFFFFEB 		bl	lcd_puts
 692:../proyecto.c **** 
 693:../proyecto.c ****     lcd_puts(92, 194, BLACK, " Fin: "); //falta añadir fecha de fin
 4691              		.loc 1 693 0
 4692 1ab8 5C00A0E3 		mov	r0, #92
 4693 1abc C210A0E3 		mov	r1, #194
 4694 1ac0 0F20A0E3 		mov	r2, #15
 4695 1ac4 58309FE5 		ldr	r3, .L127+36
 4696 1ac8 FEFFFFEB 		bl	lcd_puts
 694:../proyecto.c **** 
 695:../proyecto.c ****     // Mensajes finales
 696:../proyecto.c ****     lcd_puts(106, 216, BLACK, "Inserte monedas");
 4697              		.loc 1 696 0
 4698 1acc 6A00A0E3 		mov	r0, #106
 4699 1ad0 D810A0E3 		mov	r1, #216
 4700 1ad4 0F20A0E3 		mov	r2, #15
 4701 1ad8 48309FE5 		ldr	r3, .L127+40
 4702 1adc FEFFFFEB 		bl	lcd_puts
 697:../proyecto.c ****     lcd_puts(48, 228, BLACK, "Pulse la pantalla para aceptar");
 4703              		.loc 1 697 0
 4704 1ae0 3000A0E3 		mov	r0, #48
 4705 1ae4 E410A0E3 		mov	r1, #228
 4706 1ae8 0F20A0E3 		mov	r2, #15
 4707 1aec 38309FE5 		ldr	r3, .L127+44
 4708 1af0 FEFFFFEB 		bl	lcd_puts
 698:../proyecto.c **** }
 4709              		.loc 1 698 0
 4710 1af4 0CD04BE2 		sub	sp, fp, #12
 4711 1af8 00689DE8 		ldmfd	sp, {fp, sp, lr}
 4712 1afc 1EFF2FE1 		bx	lr
 4713              	.L128:
 4714              		.align	2
 4715              	.L127:
 4716 1b00 3F010000 		.word	319
 4717 1b04 20020000 		.word	.LC25
 4718 1b08 28020000 		.word	.LC26
 4719 1b0c 48020000 		.word	.LC27
 4720 1b10 68020000 		.word	.LC28
 4721 1b14 60000000 		.word	.LC4
 4722 1b18 88020000 		.word	.LC29
 4723 1b1c 1F85EB51 		.word	1374389535
 4724 1b20 94020000 		.word	.LC30
 4725 1b24 9C020000 		.word	.LC31
 4726 1b28 A4020000 		.word	.LC32
 4727 1b2c B4020000 		.word	.LC33
 4728              		.cfi_endproc
 4729              	.LFE12:
 4731              		.data
 4734              	init.4293:
 4735 0000 01       		.byte	1
 4736              		.bss
 4737              	state.4297:
 4738 0000 00       		.space	1
 4739 0001 000000   		.align	2
 4740              	ticks.4298:
 4741 0004 00000000 		.space	4
 4742              		.data
 4745              	init.4275:
 4746 0001 01       		.byte	1
 4747              		.bss
 4748              	state.4280:
 4749 0008 00       		.space	1
 4750              		.data
 4753              	init.4260:
 4754 0002 01       		.byte	1
 4755              		.bss
 4756              	state.4265:
 4757 0009 00       		.space	1
 4758              		.data
 4761              	init.4237:
 4762 0003 01       		.byte	1
 4763              		.bss
 4764              	credit.4239:
 4765 000a 00       		.space	1
 4766              	state.4238:
 4767 000b 00       		.space	1
 4768              		.align	1
 4769              	ticks.4240:
 4770 000c 0000     		.space	2
 4771 000e 0000     		.text
 4772              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 proyecto.c
                            *COM*:00000078 parking
                            *COM*:00000007 actual_time
                            *COM*:00000001 selectedPlace
                            *COM*:00000002 coinAcceptorMsg
                            *COM*:00000006 tsPressedMsg
                            *COM*:00000002 coinsMoverMsg
                            *COM*:00000001 printTicketFlag
C:\Users\march\AppData\Local\Temp\ccCVPSlk.s:2155   .text:00000000 $a
C:\Users\march\AppData\Local\Temp\ccCVPSlk.s:2158   .text:00000000 main
C:\Users\march\AppData\Local\Temp\ccCVPSlk.s:3623   .text:00000f30 setup
C:\Users\march\AppData\Local\Temp\ccCVPSlk.s:2239   .text:000000a0 $d
C:\Users\march\AppData\Local\Temp\ccCVPSlk.s:3196   .text:00000b94 tsScanTask
C:\Users\march\AppData\Local\Temp\ccCVPSlk.s:3311   .text:00000c9c coinsAcceptorTask
C:\Users\march\AppData\Local\Temp\ccCVPSlk.s:2263   .text:000000bc mainTask
C:\Users\march\AppData\Local\Temp\ccCVPSlk.s:3464   .text:00000e00 coinsMoverTask
C:\Users\march\AppData\Local\Temp\ccCVPSlk.s:2985   .text:00000908 clockTask
C:\Users\march\AppData\Local\Temp\ccCVPSlk.s:2828   .text:0000072c ticketPrinterTask
C:\Users\march\AppData\Local\Temp\ccCVPSlk.s:2250   .rodata:00000000 $d
C:\Users\march\AppData\Local\Temp\ccCVPSlk.s:2260   .text:000000bc $a
C:\Users\march\AppData\Local\Temp\ccCVPSlk.s:3878   .text:000011b0 plotWelcomeScreen
C:\Users\march\AppData\Local\Temp\ccCVPSlk.s:2308   .text:00000118 $d
C:\Users\march\AppData\Local\Temp\ccCVPSlk.s:2315   .text:0000012c $a
C:\Users\march\AppData\Local\Temp\ccCVPSlk.s:3975   .text:000012ac drawParkingGrid
C:\Users\march\AppData\Local\Temp\ccCVPSlk.s:4247   .text:00001600 checkSelectedPlace
C:\Users\march\AppData\Local\Temp\ccCVPSlk.s:4551   .text:00001900 showTariffScreen
C:\Users\march\AppData\Local\Temp\ccCVPSlk.s:4341   .text:000016d8 showPlaceOccupiedMessage
C:\Users\march\AppData\Local\Temp\ccCVPSlk.s:2794   .text:000006f4 $d
C:\Users\march\AppData\Local\Temp\ccCVPSlk.s:4761   .data:00000003 init.4237
C:\Users\march\AppData\Local\Temp\ccCVPSlk.s:4764   .bss:0000000a credit.4239
C:\Users\march\AppData\Local\Temp\ccCVPSlk.s:4766   .bss:0000000b state.4238
C:\Users\march\AppData\Local\Temp\ccCVPSlk.s:4769   .bss:0000000c ticks.4240
C:\Users\march\AppData\Local\Temp\ccCVPSlk.s:2825   .text:0000072c $a
C:\Users\march\AppData\Local\Temp\ccCVPSlk.s:2972   .text:000008ec $d
C:\Users\march\AppData\Local\Temp\ccCVPSlk.s:2982   .text:00000908 $a
C:\Users\march\AppData\Local\Temp\ccCVPSlk.s:3188   .text:00000b8c $d
C:\Users\march\AppData\Local\Temp\ccCVPSlk.s:3193   .text:00000b94 $a
C:\Users\march\AppData\Local\Temp\ccCVPSlk.s:3302   .text:00000c90 $d
C:\Users\march\AppData\Local\Temp\ccCVPSlk.s:4753   .data:00000002 init.4260
C:\Users\march\AppData\Local\Temp\ccCVPSlk.s:4756   .bss:00000009 state.4265
C:\Users\march\AppData\Local\Temp\ccCVPSlk.s:3308   .text:00000c9c $a
C:\Users\march\AppData\Local\Temp\ccCVPSlk.s:3373   .text:00000d2c $d
C:\Users\march\AppData\Local\Temp\ccCVPSlk.s:3379   .text:00000d3c $a
C:\Users\march\AppData\Local\Temp\ccCVPSlk.s:3455   .text:00000df4 $d
C:\Users\march\AppData\Local\Temp\ccCVPSlk.s:4745   .data:00000001 init.4275
C:\Users\march\AppData\Local\Temp\ccCVPSlk.s:4748   .bss:00000008 state.4280
C:\Users\march\AppData\Local\Temp\ccCVPSlk.s:3461   .text:00000e00 $a
C:\Users\march\AppData\Local\Temp\ccCVPSlk.s:3584   .text:00000f20 $d
C:\Users\march\AppData\Local\Temp\ccCVPSlk.s:4734   .data:00000000 init.4293
C:\Users\march\AppData\Local\Temp\ccCVPSlk.s:4737   .bss:00000000 state.4297
C:\Users\march\AppData\Local\Temp\ccCVPSlk.s:4740   .bss:00000004 ticks.4298
C:\Users\march\AppData\Local\Temp\ccCVPSlk.s:3620   .text:00000f30 $a
C:\Users\march\AppData\Local\Temp\ccCVPSlk.s:3834   .text:00001174 $d
C:\Users\march\AppData\Local\Temp\ccCVPSlk.s:3875   .text:000011b0 $a
C:\Users\march\AppData\Local\Temp\ccCVPSlk.s:3960   .text:00001288 $d
C:\Users\march\AppData\Local\Temp\ccCVPSlk.s:3972   .text:000012ac $a
C:\Users\march\AppData\Local\Temp\ccCVPSlk.s:4240   .text:000015fc $d
C:\Users\march\AppData\Local\Temp\ccCVPSlk.s:4244   .text:00001600 $a
C:\Users\march\AppData\Local\Temp\ccCVPSlk.s:4325   .text:000016d0 $d
C:\Users\march\AppData\Local\Temp\ccCVPSlk.s:4338   .text:000016d8 $a
C:\Users\march\AppData\Local\Temp\ccCVPSlk.s:4512   .text:000018f0 $d
C:\Users\march\AppData\Local\Temp\ccCVPSlk.s:4548   .text:00001900 $a
C:\Users\march\AppData\Local\Temp\ccCVPSlk.s:4716   .text:00001b00 $d
C:\Users\march\AppData\Local\Temp\ccCVPSlk.s:4738   .bss:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
sys_init
leds_init
segs_init
uart0_init
rtc_init
timers_init
keypad_init
lcd_init
ts_init
lcd_on
ts_on
scheduler_init
create_task
timer0_open_tick
sleep
dispacher
scheduler
lcd_clear
lcd_puts_x2
lcd_puts
sw_delay_ms
rtc_gettime
memcpy
apply_credits
uart0_puts
uart0_putint
calculate_weekday
lcd_putchar
lcd_putint
dates_comparator
reset_rtc_time
ts_pressed
ts_getpos
keypad_pressed
keypad_scan
segs_putchar
led_on
segs_off
led_off
uart0_getint
rtc_puttime
lcd_draw_box
lcd_putchar_x2
lcd_putint_x2
